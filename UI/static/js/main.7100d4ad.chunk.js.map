{"version":3,"sources":["logo.svg","common.js","pages/dashboard.js","pages/component/iproute.js","pages/component/iptables.js","openvpn.svg","pages/component/system.js","pages/component/vip.js","pages/component/ipset.js","pages/config.js","pages/component/sessions.js","pages/component/runningConfig.js","pages/report.js","pages/component/changePwd.js","pages/component/openvpn.js","pages/app.js","pages/home.js","pages/login.js","assets/bg.jpg","assets/ad.png","index.js"],"names":["_style","_path","_path2","_path3","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","title","titleId","props","xmlns","width","height","viewBox","ref","id","d","className","style","fill","strokeLinejoin","strokeWidth","ForwardRef","user_info","window","sessionStorage","getItem","api_url","document","getElementById","getAttribute","globalConfig","domain","userData","JSON","parse","formatBytes","bytes","label","isNaN","undefined","k","sizes","Math","floor","log","x","pow","toFixed","second2str","sec","s","parseInt","h","m","Content","Layout","styles","field","display","marginRight","textAlign","liquidConfig","outline","border","distance","wave","gaugeConfig","padding","range","ticks","color","indicator","pointer","stroke","pin","statistic","content","offsetY","fontSize","pieConfig","angleField","colorField","radius","innerRadius","type","interactions","sessioniPieConfig","lineConfig","xField","yField","margin","Dashboard","ajaxGetData","init","disk_usage","axios","get","then","r","setState","disk_util","data","util","session_count","loadReq","params","time_range","ret","state","loadData","map","item","unshift","date","datetime","category","value","load1","load5","load15","tcpReq","tcp_session","tcp_active","tcp_passive","netReq","inData","outData","interface","in_bytes","out_bytes","basicInfoReq","basicInfo","cpuReq","cpu_util","memReq","mem_util","chainAggr","rule_aggr","rule","chain_aggr","chain","Promise","all","catch","e","console","timer","Fragment","Item","gutter","span","hostname","running_total_time","Date","system_time","toDateString","cpu_count","mem_total","percent","theme","styleSheet","brandColor","smooth","seriesField","tooltip","formatter","datum","name","yAxis","v","Component","InterfaceRadio","option_list","placeholder","onChange","allowClear","index","toLowerCase","Option","ifname","EditInterfaceAddress","onSubmit","formRef","current","submit","onFinish","values","url","post","ip","netmask","mode","message","success","done","error","response","detail","handleModeChange","setFieldsValue","inputDisable","React","createRef","layout","initialValues","address","Group","defaultChecked","rules","required","disabled","InsertStaicRoute","max","Interfaces","columns","dataIndex","render","status","text","record","icon","EditOutlined","onClick","handleEditInterfaceAddress","subComponentDone","visible","getAllInterfaces","dataSource","modal_title","modal_content","Child","onOk","onCancel","pagination","rowKey","destroyOnClose","StaticRoute","DeleteOutlined","Modal","confirm","okType","handleDeleteRoute","getAllStaticRoute","dst","gateway","dev","oif","delete","handleAddStaticRoute","direction","size","PlusOutlined","idx","PolicyRoute","getAllPolicyRoute","deletePolicyRoute","sport","dport","children","min","iif","protocol","mark","ArpTables","getArpData","datasource","clearObject","o","DragHandle","sortableHandle","MenuOutlined","cursor","SortableItem","sortableElement","SortableContainer","sortableContainer","NewRule","getCascaderData","cascaderData","to_source","getFieldValue","chainName","chain_name","trim","replaceAll","groupType","handleTargetChange","to_ports","to_destination","out_interface","toUpperCase","filter","inputValue","path","some","option","in_interface","hidden","options","popupPlacement","showSearch","NewChain","table_name","nat_mode","src","Chains","manual","textDecoration","is_rule","href","getAllRulesByChain","handleDeleteChain","onSortEnd","oldIndex","newIndex","old_rule_seq","rule_seq","new_rule_seq","info","put","old_index","new_index","newData","arrayMoveImmutable","concat","el","DraggableContainer","useDragHandle","disableAutoscroll","helperClass","DraggableBodyRow","restProps","findIndex","ruleMoreMenu","handleRuleAction","enable","ruleColumns","fixed","overlay","trigger","DownOutlined","pauseAndResumeEvent","getAllChains","group_type","page_tag","handleAddChainGroup","handleAddRule","c","ruleRecord","ruleData","prevProps","prevState","snapshot","titleName","LeftOutlined","scroll","components","body","wrapper","row","System","getDataFromServer","handleSwitchChange","checked","desc","Vip","isp2cn","result","handleDeleteVip","msg","getAllRecord","substr","ip_range","split","start_ip","end_ip","editData","req","dateSource","compact","defaultValue","borderLeft","borderRight","pointerEvents","buttonStyle","Button","BWList","handleAddHostToList","child","get_all_host_from_server","deleteIpSetRecord","initialValue","timeout","Sider","SubMenu","Menu","Config","handleMenuClick","defaultSelectedKeys","ApartmentOutlined","ForkOutlined","RadarChartOutlined","BlockOutlined","SwapOutlined","SettingOutlined","minHeight","Sessions","getSessionData","RunningConfig","getRunningConfig","Report","ExceptionOutlined","ReloadOutlined","ChangePassword","hasFeedback","Password","dependencies","validator","_","reject","Error","resolve","SvgOpenvpn","t","itemField","fontWeight","paddingRight","spin","position","left","top","right","bottom","OpenVpnStatus","get_openvpn_server_status","start_or_stop_server","cmd","post_data","loading","modal_spin","server","dns","listen_port","listen_ip","spinning","shape","float","SafetyCertificateOutlined","OpenVpnUsers","openvpn_users_columns","DownloadOutlined","open","delete_user","ControlOutlined","user_ip","user_route","change_user_info_box","user_id","modify_user_info","uid","get_openvpn_users_list","pageInfo","page","userInfoFormRef","pageSize","total","marginBottom","expandable","expandedRowRender","dangerouslySetInnerHTML","__html","TextArea","Application","defaultOpenKeys","Header","Footer","Home","menu","KeyOutlined","handleChangePasswordFinish","SaveOutlined","LogoutOutlined","setItem","location","reload","pageChange","marginTop","overflow","preventDefault","first_name","documentElement","clientHeight","tile","bg","background","backgroundSize","box","backgroundColor","Login","stringify","dateTime","now","timestamp","verification_img_url","basic_url","prefix","UserOutlined","LockOutlined","VerifiedOutlined","alt","htmlType","ReactDOM"],"mappings":"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","file":"static/js/main.7100d4ad.chunk.js","sourcesContent":["var _style, _path, _path2, _path3;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 71,\n    height: 71,\n    viewBox: \"0 0 71 71\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", null, \".a{fill:none;stroke-width:3;}\")), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m12.2 1.7h8.6c5.7 0 10.3 4.4 10.3 9.9v9.4c0 2.7 0 9.9 0 9.9 0 0-7.5 0-10.3 0h-8.6C6.1 30.7 1.5 26.3 1.5 20.8v-9.4c0-2.7 0.1-9.8 0.1-9.8 0 0 7.4-0.1 10.2-0.1z\",\n    className: \"a\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m59.5 1.7h-8.6c-5.7 0-10.3 4.4-10.3 9.9v9.4c0 2.7 0 9.9 0 9.9 0 0 7.5 0 10.3 0H59.1c5.7 0 10.3-4.4 10.3-9.9v-9.4c0-2.7-0.1-9.8-0.1-9.8 0 0-7.4-0.1-10.2-0.1z\",\n    className: \"a\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m12.2 69.6h8.6c5.7 0 10.3-4.4 10.3-9.9v-9.4c0-2.7 0-9.9 0-9.9 0 0-7.5 0-10.3 0h-8.6c-5.7 0-10.3 4.4-10.3 9.9v9.4c0 2.7 0.1 9.8 0.1 9.8 0 0 7.4 0.1 10.2 0.1z\",\n    className: \"a\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m31.2 30.9v9.4a8.2 8.2 0 0 0 1.2 0.1 8.2 8.2 0 0 0 8.2-8.2 8.2 8.2 0 0 0-0.1-1.3z\",\n    style: {\n      fill: \"none\",\n      strokeLinejoin: \"round\",\n      strokeWidth: 3\n    }\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.69cd1714.svg\";\nexport { ForwardRef as ReactComponent };","const user_info = window.sessionStorage.getItem('user_info');\nconst api_url = document.getElementById('api_url').getAttribute('value')\n\nexport var globalConfig = {\n    domain: api_url.indexOf('{{') === -1 ? api_url : 'http://10.10.4.3:8000',\n    userData: user_info ? JSON.parse(user_info): null,\n}\n\nexport function ts2date(ts, t = 'short'){\n    // return new Date(ts*1000).toLocaleString('zh-cn').split(' ')[0].replaceAll('/','-')\n    if (t === 'long') {\n        return new Date(ts*1000).toLocaleString('zh-cn')\n    }\n    return new Date(ts*1000).toLocaleString('en').split(' ')[1]\n}\n\n\nexport function formatBytes(bytes,label=true) {\n    if (bytes === '0' || isNaN(bytes) || bytes === undefined || bytes === 0) return '0';\n    let k = 1024;\n    let sizes = ['B','KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    let i = Math.floor(Math.log(bytes) / Math.log(k))\n    let x = (bytes / Math.pow(k, i)).toFixed(2)\n    if (label){\n        return x + ' ' + sizes[i];\n    }else{\n        return x\n    }\n}\n\nexport function second2str(sec){\n    let s = parseInt(sec)\n    let d = 0, h = 0, m = 0;\n    if (s>=86400){\n        d = Math.floor(s/86400)\n        s = s%86400\n    }\n\n    if (s>=3600){\n        h = Math.floor(s/3600)\n        s = s%3600\n    }\n\n    if (s>=60){\n        m = Math.floor(s/60)\n        s = s%60\n    }\n\n    return `${d} days ${h} hours ${m} minute ${s} seconds`\n}\n\n\nexport function logout(){\n    window.sessionStorage.setItem('user_info', null);\n    window.location.reload();\n}","import React, {Component} from \"react\";\nimport {\n    Breadcrumb, Layout, Row, Col, Card\n} from \"antd\";\nimport {Line, Gauge, Liquid, Pie} from '@ant-design/charts'\nimport {globalConfig, formatBytes, second2str} from \"../common\";\nimport axios from \"axios\";\n// import {LaptopOutlined, NotificationOutlined, UserOutlined} from \"@ant-design/icons\";\n\nconst {Content} = Layout\n\nconst styles = {\n    field: {\n        display: 'inline-block',\n        marginRight: 10,\n        textAlign: 'right',\n        width: 100\n    }\n};\n\nconst liquidConfig = {\n    height: 180,\n    // percent: 0.25,\n    outline: {\n        border: 4,\n        distance: 8,\n    },\n    wave: {length: 128},\n}\n\nconst gaugeConfig = {\n    height: 180,\n    padding: 4,\n    range: {\n        ticks: [0, 1],\n        color: ['l(0) 0:#F4664A 0.5:#FAAD14 1:#30BF78'],\n    },\n    indicator: {\n        pointer: {style: {stroke: '#D0D0D0'}},\n        pin: {style: {stroke: '#D0D0D0'}},\n    },\n    statistic: {\n        content: {\n            offsetY: 5,\n            style: {\n                fontSize: '22px',\n                color: '#4B535E',\n            },\n            // formatter: function formatter() {\n            //     return 'CPU util';\n            // },\n        },\n    },\n}\n\nconst pieConfig = {\n    height:220,\n    // appendPadding: 10,\n    angleField: 'value',\n    colorField: 'name',\n    radius: 1,\n    innerRadius: 0.8,\n    label: { type: 'outer' },\n    interactions: [{ type: 'element-active' }, { type: 'element-selected' }],\n}\n\nconst sessioniPieConfig = {\n    padding: 10,\n    height:220,\n    // appendPadding: 10,\n    angleField: 'hits',\n    colorField: 'host',\n    radius: 1,\n    // innerRadius: 0.8,\n    label: { type: 'outer' },\n    // interactions: [{ type: 'element-active' }, { type: 'element-selected' }],\n}\n\nconst lineConfig = {\n    xField: 'date',\n    yField: 'value',\n    height: 220,\n    margin: 10,\n    color: ['#1979C9', '#D62A0D', '#FAA219'],\n};\n\nexport class Dashboard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.timer = null;\n        this.state = {\n            loadData: [],\n            inData: [],\n            outData: [],\n            basicInfo: {},\n            cpu_util: 0,\n            mem_util: 0,\n            disk_util: 0,\n            tcp_session: [],\n            rule_aggr:[],\n            chain_aggr:[],\n            session_count: []\n        }\n    }\n\n    componentDidMount() {\n        // setInterval(this.ajaxGetData, 5000)\n        this.ajaxGetData();\n        // this.timer = setInterval(()=>this.ajaxGetData(false), 6000)\n        // this.setState({timer: timer})\n        // console.log('1234')\n    }\n\n    componentWillUnmount() {\n        // console.log('4567')\n        // clearInterval(this.timer)\n    }\n\n    ajaxGetData = (init=true) => {\n\n        let disk_usage = axios.get(\n            globalConfig.domain+'/api/serverInfo/disk_usage'\n        ).then(\n            r=>this.setState({\n                disk_util: r.data.data.util\n            })\n        )\n\n        let session_count = axios.get(\n            globalConfig.domain+'/api/serverInfo/hostSessionCount'\n        ).then(\n            r=>this.setState({\n                session_count: r.data.data\n            })\n        )\n\n        let loadReq = axios.get(\n            globalConfig.domain + '/api/serverInfo/sar/load',{\n                params:{\n                    time_range: init ? '10m' : '5s'\n                }\n            }\n        ).then(\n            ret => {\n                let data = init ? [] : this.state.loadData;\n                ret.data.data.map((item) => {\n                    data.unshift({\n                        date: item.datetime,\n                        category: 'load1',\n                        value: item.load1,\n                    })\n                    data.unshift({\n                        date: item.datetime,\n                        category: 'load5',\n                        value: item.load5,\n                    })\n                    data.unshift({\n                        date: item.datetime,\n                        category: 'load15',\n                        value: item.load15,\n                    })\n                    return false;\n                })\n                this.setState({loadData: data})\n                // console.log(data)\n            }\n        )\n\n        let tcpReq = axios.get(\n            globalConfig.domain + '/api/serverInfo/sar/tcp', {\n                params:{\n                    time_range: init ? '30m' : '5s'\n                }\n            }\n        ).then(\n            ret => {\n                let data = init ? [] : this.state.tcp_session;\n                ret.data.data.map((item) => {\n                    data.unshift({\n                        date: item.datetime,\n                        category: 'tcp_active',\n                        value: item.tcp_active/10000,\n                    })\n                    data.unshift({\n                        date: item.datetime,\n                        category: 'tcp_passive',\n                        value: item.tcp_passive/10000,\n                    })\n                    return false;\n                })\n                this.setState({tcp_session: data})\n                // console.log(data)\n            }\n        )\n\n        let netReq = axios.get(\n            globalConfig.domain + '/api/serverInfo/sar/net',{\n                params:{\n                    time_range: init ? '10m' : '5s'\n                }\n            }\n        ).then(\n            ret => {\n                let inData = init ? [] : this.state.inData;\n                let outData = init ? [] : this.state.outData;\n\n                ret.data.data.map((item) => {\n                    inData.unshift({\n                        interface: item.interface,\n                        date: item.datetime,\n                        value: parseInt(item.in_bytes /10000)\n                    })\n                    outData.unshift(\n                        {\n                            interface: item.interface,\n                            date: item.datetime,\n                            // value: formatBytes(item.out_bytes, false)\n                            value: parseInt(item.out_bytes /10000)\n                        }\n                    )\n                    return false;\n                })\n                this.setState({\n                    inData: inData,\n                    outData: outData\n                })\n            }\n        )\n\n        let basicInfoReq = axios.get(\n            globalConfig.domain + '/api/serverInfo/basicInfo'\n        ).then(\n            ret => this.setState({basicInfo: ret.data.data})\n        )\n\n        let cpuReq = axios.get(\n            globalConfig.domain + '/api/serverInfo/sar/cpu'\n        ).then(\n            ret => {\n                this.setState({\n                    cpu_util: ret.data.data[0].cpu_util / 100\n                })\n            }\n        )\n\n        let memReq = axios.get(\n            globalConfig.domain + '/api/serverInfo/sar/memory'\n        ).then(\n            ret => {\n                this.setState({\n                    mem_util: parseInt(ret.data.data[0].mem_util) / 100\n                })\n            }\n        )\n\n        let chainAggr = axios.get(\n            globalConfig.domain+'/api/serverInfo/iptables/aggregation/chainRule'\n        ).then(\n            r=>this.setState({\n                rule_aggr: r.data.data.rule,\n                chain_aggr: r.data.data.chain\n            })\n        )\n\n        // let iptablesEventAggr = axios.get(\n        //     globalConfig.domain+'/api/serverInfo/iptables/aggregation/event'\n        // ).then(\n        //     r=>this.setState({\n        //         event_aggr: r.data.data\n        //     })\n        // )\n\n        Promise.all([loadReq, netReq, basicInfoReq, cpuReq, memReq, tcpReq, chainAggr, disk_usage, session_count]).catch(\n            e=>{\n                console.log(e)\n            }\n        )\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Breadcrumb style={{margin: '16px 0'}}>\n                    <Breadcrumb.Item>Home</Breadcrumb.Item>\n                    <Breadcrumb.Item>Dashboard</Breadcrumb.Item>\n                </Breadcrumb>\n                <Layout className=\"site-layout-background\" style={{padding: '24px 0'}}>\n                    <Content>\n                        <Row gutter={[8, 8]}>\n                            <Col span={6}>\n                                <Card title={'Host Information'}>\n                                    <p><b style={styles.field}>hostname</b>{this.state.basicInfo.hostname}</p>\n                                    <p><b\n                                        style={styles.field}>uptime</b>{second2str(this.state.basicInfo.running_total_time)}\n                                    </p>\n                                    <p><b style={styles.field}>sys\n                                        time</b>{new Date(this.state.basicInfo.system_time * 1000).toDateString()}</p>\n                                    <p><b style={styles.field}>cpu core</b>{this.state.basicInfo.cpu_count}</p>\n                                    <p><b style={styles.field}>memory\n                                        total</b>{formatBytes(this.state.basicInfo.mem_total)}</p>\n                                </Card>\n                            </Col>\n                            <Col span={6}>\n                                <Card title={'Cpu Utilization'}>\n                                    <Gauge {...gaugeConfig} percent={this.state.cpu_util}/>\n                                </Card>\n                            </Col>\n                            <Col span={6}>\n                                <Card title={'Memory Utilization'}>\n                                    <Liquid {...liquidConfig} percent={this.state.mem_util}/>\n                                </Card>\n                            </Col>\n\n                            <Col span={6}>\n                                <Card title={'Disk Utilization'}>\n                                    <Liquid {...liquidConfig} theme={{ styleSheet: { brandColor: '#FAAD14' } }} percent={this.state.disk_util}/>\n                                </Card>\n                            </Col>\n\n                            <Col span={8}>\n                                <Card title={'Rule Count'}>\n                                    <Pie {...pieConfig} data={this.state.rule_aggr} />\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card title={'Policy Count'}>\n                                    <Pie {...pieConfig} data={this.state.chain_aggr} />\n                                </Card>\n                            </Col>\n\n                            <Col span={8}>\n                                <Card title={'Session Count'}>\n                                    <Pie {...sessioniPieConfig} data={this.state.session_count} />\n                                </Card>\n                            </Col>\n\n                            <Col span={8}>\n                                <Card title={'System Load'}>\n                                    <Line\n                                        smooth={false}\n                                        data={this.state.loadData}\n                                        seriesField={'category'}\n                                        {...lineConfig} />\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card title={'In traffic'}>\n                                    <Line\n                                        data={this.state.inData}\n                                        seriesField={'interface'}\n                                        smooth={false}\n                                        tooltip={{\n                                            formatter: (datum) => {\n                                                return { name: datum.interface, value: formatBytes(datum.value) };\n                                            }\n                                        }}\n                                        yAxis={\n                                            {\n                                                label: {\n                                                    formatter: (v) => formatBytes(v)\n                                                },\n                                            }\n                                        }\n                                        {...lineConfig}\n                                    />\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card title={'Out traffic'}>\n                                    <Line\n                                        tooltip={{\n                                            formatter: (datum) => {\n                                                return { name: datum.interface, value: formatBytes(datum.value) };\n                                            }\n                                        }}\n                                        smooth={false}\n                                        data={this.state.outData}\n                                        seriesField={'interface'}\n                                        yAxis={\n                                            {\n                                                label: {\n                                                    formatter: (v) => formatBytes(v)\n                                                },\n                                            }\n                                        }\n                                        {...lineConfig} />\n                                </Card>\n                            </Col>\n\n                            <Col span={24}>\n                                <Card title={'Tcp Session'}>\n                                    <Line\n                                        smooth={false}\n                                        data={this.state.tcp_session}\n                                        seriesField={'category'}\n                                        {...lineConfig} />\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Content>\n                </Layout>\n            </React.Fragment>\n        )\n    }\n}\n","import React, {Component} from \"react\";\nimport {Button, Card, Table, Space, Modal, Form, Input, message, Select, Badge, Radio, Row, Col} from \"antd\";\nimport axios from \"axios\";\nimport {globalConfig} from \"../../common\";\nimport {EditOutlined, DeleteOutlined, PlusOutlined} from '@ant-design/icons';\n\n\nexport class InterfaceRadio extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            option_list: []\n        }\n    }\n\n    componentDidMount() {\n        axios.get(\n            globalConfig.domain + '/api/serverInfo/interface/getInterfaceList'\n        ).then(\n            ret => {\n                this.setState({option_list: ret.data.data})\n            }\n        )\n    }\n\n    render() {\n        return (\n            <Select\n                placeholder=\"Select a interface\"\n                onChange={this.props.onChange}\n                allowClear\n            >\n                {\n                    this.state.option_list.map(\n                        (item, index) => {\n                            if (item.state.toLowerCase() === 'up'){\n                                return <Select.Option key={'item_' + index} value={\n                                    this.props.type === 'index' ? item.index : item.ifname\n                                }>{item.ifname}</Select.Option>\n                            }else{\n                                return null;\n                            }\n                        }\n                    )\n                }\n            </Select>\n        )\n    }\n}\n\nclass EditInterfaceAddress extends Component {\n    constructor(props) {\n        super(props);\n        this.formRef = React.createRef();\n        this.state = {\n            inputDisable: false\n        }\n    }\n\n    onSubmit = () => {\n        this.formRef.current.submit()\n    }\n\n    onFinish = (values) => {\n        if (this.props.ifname === undefined) {\n            return false;\n        }\n        let url = globalConfig.domain + '/api/config/ipRoute/setIpAddress'\n\n        axios.post(\n            url, {\n                ifname: this.props.ifname,\n                ip: values.ip,\n                netmask: values.netmask,\n                mode: values.mode,\n                state: values.state,\n            }\n        ).then(\n            () => {\n                message.success('success');\n                this.props.done();\n            }\n        ).catch(\n            e => {\n                // console.log(e)\n                message.error(e.response.data.detail)\n            }\n        )\n    }\n\n    handleModeChange = (e) => {\n        if (e.target.value === 'none') {\n            this.formRef.current.setFieldsValue({\n                'ip': '127.0.0.1',\n                'netmask': '255.255.255.0'\n            })\n            this.setState({inputDisable: true})\n        }\n        if (e.target.value === 'static') {\n            this.setState({inputDisable: false})\n        }\n    }\n\n    render() {\n        return (\n            <Form\n                layout={'vertical'}\n                name={'editInterface'}\n                onFinish={this.onFinish}\n                initialValues={\n                    {\n                        ip: this.props.address,\n                        netmask: this.props.netmask,\n                        mode: 'static',\n                        state: this.props.state,\n                    }\n                }\n                ref={this.formRef}\n            >\n                <Form.Item label={'Mode'} name={'mode'}>\n                    <Radio.Group onChange={this.handleModeChange}>\n                        <Radio value={'static'} defaultChecked={true}>Static</Radio>\n                        <Radio value={'none'}>None</Radio>\n                    </Radio.Group>\n                </Form.Item>\n\n                <Form.Item\n                    label={'Address'}\n                    name={'ip'}\n                    rules={[\n                        {\n                            required: true,\n                            message: 'please input ip address!',\n                            // max: 15\n                        }\n                    ]}\n                >\n                    <Input disabled={this.state.inputDisable} placeholder={'ip address'}/>\n                </Form.Item>\n\n                <Form.Item\n                    label={'NetMask'}\n                    name={'netmask'}\n                    rules={[\n                        {\n                            required: true,\n                            message: 'please input netmask!',\n                            // max: 15\n                        }\n                    ]}\n                >\n                    <Input disabled={this.state.inputDisable} placeholder={'netmask'}/>\n                </Form.Item>\n\n                <Form.Item label={'State'} name={'state'}>\n                    <Radio.Group>\n                        <Radio value={'up'}>Up</Radio>\n                        <Radio value={'down'}>Down</Radio>\n                    </Radio.Group>\n                </Form.Item>\n            </Form>\n        )\n    }\n\n}\n\nclass InsertStaicRoute extends Component {\n    constructor(props) {\n        super(props);\n        this.formRef = React.createRef();\n    }\n\n    onSubmit = () => {\n        this.formRef.current.submit()\n    }\n\n    onFinish = (values) => {\n        let url = globalConfig.domain + '/api/config/ipRoute/setRoute'\n\n        axios.post(\n            url, values\n        ).then(\n            ret => {\n                message.success('success');\n                this.props.done();\n            }\n        ).catch(\n            e => {\n                message.error(e.response.data.detail)\n            }\n        )\n    }\n\n    render() {\n        return (\n            <Form\n                layout={'vertical'}\n                name={'insertStaticRoute'}\n                onFinish={this.onFinish}\n                ref={this.formRef}\n            >\n                <Form.Item\n                    label={'Destination network'}\n                    name={'dst'}\n                    rules={[\n                        {\n                            required: true,\n                            message: 'please input destination network!',\n                            max: 18\n                        }\n                    ]}\n                >\n                    <Input placeholder={'192.168.10.0/22'}/>\n                </Form.Item>\n\n                <Form.Item\n                    label={'Gateway'}\n                    name={'gateway'}\n                    rules={[\n                        {\n                            required: true,\n                            message: 'please input netmask!',\n                            max: 15\n                        }\n                    ]}\n                >\n                    <Input placeholder={'192.168.10.1'}/>\n                </Form.Item>\n\n                {/*<Form.Item*/}\n                {/*    label={'Device'}*/}\n                {/*    name={'dev'}*/}\n                {/*    rules={[*/}\n                {/*        {*/}\n                {/*            required: true,*/}\n                {/*            message: 'please choice a interface'*/}\n                {/*        }*/}\n                {/*    ]}*/}\n                {/*>*/}\n                {/*    <InterfaceRadio type={'ifname'} onChange={(e) => {*/}\n                {/*        this.formRef.setFieldsValue({ifname: e})*/}\n                {/*    }}/>*/}\n                {/*</Form.Item>*/}\n            </Form>\n        )\n    }\n}\n\nexport class Interfaces extends Component {\n\n    columns = [\n        {title: 'Interface Name', dataIndex: 'ifname',},\n        {title: 'Address', dataIndex: 'address',},\n        {title: 'Netmask', dataIndex: 'netmask',},\n        {title: 'MAC', dataIndex: 'mac',},\n        {title: 'Mtu', dataIndex: 'mtu',},\n        {\n            title: 'State',\n            dataIndex: 'state',\n            render: (v) => v.toLowerCase() === 'up' ? <Badge status=\"success\" text={'up'}/> :\n                <Badge status=\"error\" text={'down'}/>\n        },\n        {\n            title: 'Action', dataIndex: 'index', render: (v, record) => {\n                return <Button\n                    disabled={record.ifname.indexOf('tun') === 0}\n                    icon={<EditOutlined/>}\n                    onClick={() => this.handleEditInterfaceAddress(record)}\n                >Modify</Button>\n            }\n        },\n    ];\n\n    constructor(props) {\n        super(props);\n        this.Child = React.createRef();\n        this.state = {\n            dataSource: [],\n\n            modal_content: null,\n            modal_title: null,\n            visible: false,\n        }\n    }\n\n    subComponentDone = () => {\n        this.setState({visible: false});\n        this.getAllInterfaces();\n    }\n\n    componentDidMount() {\n        this.getAllInterfaces();\n    }\n\n    getAllInterfaces = () => {\n        axios.get(\n            globalConfig.domain + '/api/serverInfo/interface/getInterfaceDetail'\n        ).then(\n            ret => {\n                this.setState({\n                    dataSource: ret.data.data\n                })\n            }\n        )\n    }\n\n    handleEditInterfaceAddress = (record) => {\n        // console.log(record);\n        this.setState({\n            visible: true,\n            modal_title: 'Modify ' + record.ifname + ' interface  address',\n            modal_content: <EditInterfaceAddress\n                state={record.state}\n                done={this.subComponentDone}\n                address={record.address}\n                ifname={record.ifname}\n                netmask={record.netmask}\n                ref={this.Child}\n            />\n        })\n    }\n\n    onOk = () => {\n        this.Child.current.onSubmit()\n    }\n\n\n    onCancel = () => {\n        this.setState({visible: false, modal_content: null})\n    }\n\n    render() {\n        return (\n            <Card title={'Interfaces'}>\n                <Table\n                    pagination={false}\n                    dataSource={this.state.dataSource}\n                    columns={this.columns}\n                    rowKey={(record) => record.index}\n                />\n                <Modal\n                    destroyOnClose={true}\n                    title={this.state.modal_title}\n                    visible={this.state.visible}\n                    onOk={this.onOk}\n                    onCancel={this.onCancel}\n                >\n                    {this.state.modal_content}\n                </Modal>\n            </Card>\n        )\n    }\n}\n\nexport class StaticRoute extends Component {\n    columns = [\n        {title: 'Destination', dataIndex: 'dst',},\n        {title: 'Netmask', dataIndex: 'dst_mask',},\n        {title: 'Gateway', dataIndex: 'gateway',},\n        // {title: 'Family', dataIndex: 'family',},\n        {title: 'Interface', dataIndex: 'oif',},\n        // {title: 'Priority', dataIndex: 'priority',},\n        {\n            title: 'Action', dataIndex: 'index', render: (v, record) => {\n                return <Button icon={<DeleteOutlined/>} onClick={() => {\n                    return Modal.confirm({\n                        title: 'delete static route',\n                        content: 'deleting route',\n                        okType: 'danger',\n                        onOk: () => this.handleDeleteRoute(record),\n                    })\n                }}>Delete</Button>\n            }\n        },\n    ];\n\n\n    constructor(props) {\n        super(props);\n        this.Child = React.createRef();\n        this.state = {\n            dataSource: [],\n\n            modal_content: null,\n            modal_title: null,\n            visible: false,\n        }\n    }\n\n    componentDidMount() {\n        this.getAllStaticRoute();\n    }\n\n    subComponentDone = () => {\n        this.setState({visible: false});\n        this.getAllStaticRoute();\n    }\n\n    handleDeleteRoute = (record) => {\n        // console.log(record)\n        let data = {\n            dst: record.dst,\n            gateway: record.gateway,\n            dev: record.oif\n        }\n        // console.log(data)\n        axios.delete(\n            globalConfig.domain + '/api/config/ipRoute/setRoute', {\n                data: data\n            }\n        ).then(\n            ret => {\n                message.success('success');\n                this.getAllStaticRoute();\n            }\n        ).catch(\n            e => {\n                message.error(e.response.data.detail)\n            }\n        )\n    }\n\n    getAllStaticRoute = () => {\n        axios.get(\n            globalConfig.domain + '/api/serverInfo/ipRoute/getStaticRouteTable'\n        ).then(\n            ret => {\n                this.setState({\n                    dataSource: ret.data.data\n                })\n            }\n        )\n    }\n\n    onOk = () => {\n        this.Child.current.onSubmit()\n    }\n\n    onCancel = () => {\n        this.setState({\n            visible: false\n        })\n    }\n\n    handleAddStaticRoute = () => {\n        this.setState({\n            modal_content: <InsertStaicRoute done={this.subComponentDone} ref={this.Child}/>,\n            modal_title: 'Add Static Route',\n            visible: true\n        })\n    }\n\n    render() {\n        return (\n            <Card title={'Static Route'}>\n                <Space direction={'vertical'} size={'middle'} style={{width: '100%'}}>\n                    <Button type={'primary'} icon={<PlusOutlined/>} onClick={this.handleAddStaticRoute}>Add Static Route</Button>\n                    <Table\n                        pagination={false}\n                        dataSource={this.state.dataSource}\n                        columns={this.columns}\n                        rowKey={(record) => record.idx}\n                    />\n                </Space>\n                <Modal\n                    destroyOnClose={true}\n                    title={this.state.modal_title}\n                    visible={this.state.visible}\n                    onOk={this.onOk}\n                    onCancel={this.onCancel}\n                >\n                    {this.state.modal_content}\n                </Modal>\n            </Card>\n        )\n    }\n}\n\nexport class PolicyRoute extends Component {\n\n    constructor(props) {\n        super(props);\n        this.formRef = React.createRef()\n        this.state = {\n            dataSource: [],\n            visible: false,\n        }\n\n    }\n\n    getAllPolicyRoute = () => {\n        axios.get(\n            globalConfig.domain + '/api/serverInfo/ipRoute/getAllIpRule'\n        ).then(\n            ret => {\n                // console.log(ret.data.data)\n                this.setState({dataSource: ret.data.data})\n            }\n        )\n    }\n\n    deletePolicyRoute = (v) =>{\n        for (let k in v){\n            if (v[k]===undefined || v[k] === null){\n                delete v[k]\n            }\n        }\n        // console.log(v)\n        axios.delete(\n            globalConfig.domain+'/api/config/ipRoute/setRule', {\n                data:v\n            }\n        ).then(\n            ()=>{\n                message.success('success');\n                this.getAllPolicyRoute();\n            }\n        ).catch(\n            e=>{\n                message.error(e.response.data.detail)\n            }\n        )\n    }\n\n    onFinish = (v) => {\n        if (v.sport === undefined) {\n            delete v.sport\n        }\n        if (v.dport === undefined) {\n            delete v.dport\n        }\n        axios.post(\n            globalConfig.domain + '/api/config/ipRoute/setRule', v\n        ).then(\n            () => {\n                message.success('success');\n                this.setState({visible: false});\n                this.getAllPolicyRoute();\n            }\n        ).catch(\n            e => {\n                message.error(e.response.data.detail)\n            }\n        )\n    }\n\n    componentDidMount() {\n        this.getAllPolicyRoute();\n    }\n\n    columns = [\n        {\n            title: 'Source',\n            children:[\n                {title: \"Address\", dataIndex: 'src'},\n                {title: \"Port\", dataIndex: 'sport'},\n\n            ]\n        },\n        {\n            title: 'Destination',\n            children:[\n                {title: \"Address\", dataIndex: 'dst'},\n                {title: \"Port\", dataIndex: 'dport'},\n\n            ]\n        },\n        {title: 'Incoming Interface', dataIndex: 'iif',},\n        {title: 'Protocol', dataIndex: 'protocol',},\n        {title: 'Mark', dataIndex: 'mark',},\n        {title: 'Out Interface', dataIndex: 'oif',},\n        {\n            title: 'Action',\n            dataIndex: 'idx',\n            render: (v, record) => {\n                return <Button icon={<DeleteOutlined/>} onClick={()=>{\n                    Modal.confirm(\n                        {\n                            title: 'Delete policy route',\n                            onOk: ()=>this.deletePolicyRoute(record),\n                            okType: \"warning\"\n                        }\n                    )\n                }\n                }>Delete</Button>\n            }\n        },\n    ];\n\n    render() {\n        return (\n            <Card title={'Policy Route Table'}>\n                <Space direction={'vertical'} size={'middle'} style={{width: '100%'}}>\n                    <Button type={'primary'} icon={<PlusOutlined />} onClick={() => this.setState({visible: true})}>Add Policy Route</Button>\n                    <Table\n                        pagination={false}\n                        dataSource={this.state.dataSource}\n                        columns={this.columns}\n                        rowKey={(record) => record.id}\n                    />\n                </Space>\n                <Modal\n                    destroyOnClose={true}\n                    title={\"add policy route\"}\n                    visible={this.state.visible}\n                    onOk={() => this.formRef.current.submit()}\n                    onCancel={() => this.setState({visible: false})}\n                >\n                    <Form layout={'vertical'} ref={this.formRef} onFinish={this.onFinish}>\n                        <Row gutter={10}>\n                            <Col span={12}>\n                                <Form.Item\n                                    name={'src'}\n                                    label={'Source'}\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'please input source addr',\n                                            max: 18,\n                                        }\n                                    ]}\n                                >\n                                    <Input placeholder={'172.16.10.0/24'}/>\n                                </Form.Item>\n                            </Col>\n\n                            <Col span={12}>\n                                <Form.Item\n                                    name={'sport'}\n                                    label={'Port'}\n                                    // rules={[\n                                    //     {\n                                    //         required: true,\n                                    //         message: 'please input valid source port',\n                                    //         max: 65535,\n                                    //         min: 1,\n                                    //         type: \"number\",\n                                    //         transform: (value) => Number(value)\n                                    //     }\n                                    // ]}\n                                >\n                                    <Input\n                                        max={65535}\n                                        min={1}\n                                        type={\"number\"}\n                                        placeholder={'80'}\n                                        onChange={v => this.formRef.current.setFieldsValue({sport: parseInt(v.target.value)})}\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n\n                        <Form.Item\n                            name={'iif'}\n                            label={'Input Interface'}\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'please choice input interface',\n                                    max: 50\n                                }\n                            ]}\n                        >\n                            <InterfaceRadio onChange={(v) => this.formRef.current.setFieldsValue({iif: v})}/>\n                        </Form.Item>\n\n                        <Row gutter={10}>\n                            <Col span={12}>\n                                <Form.Item\n                                    name={'dst'}\n                                    label={'Destination'}\n                                    rules={[{max: 18, required: true}]}\n                                >\n                                    <Input placeholder={'172.16.20.0/24'}/>\n                                </Form.Item>\n                            </Col>\n\n                            <Col span={12}>\n                                <Form.Item\n                                    name={'dport'}\n                                    label={'Port'}\n                                    // rules={[\n                                    //     {\n                                    //         required: true,\n                                    //         max: 65535,\n                                    //         min: 1,\n                                    //         message: \"please input valid destination port\",\n                                    //         type: \"number\",\n                                    //         transform: (value) => Number(value)\n                                    //     }]}\n                                >\n                                    <Input\n                                        type={\"number\"}\n                                        min={1}\n                                        max={65535}\n                                        placeholder={8080}\n                                        onChange={v => this.formRef.current.setFieldsValue({dport: parseInt(v.target.value)})}\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Form.Item\n                            name={'protocol'}\n                            label={'Protocol'}\n                            // rules={[\n                            //     {\n                            //         required: true,\n                            //         message: 'please select protocol'\n                            //     }\n                            // ]}\n                        >\n                            <Select\n                                placeholder=\"Select a protocol\"\n                                allowClear\n                                onChange={e => this.formRef.current.setFieldsValue({protocol: e})}\n                            >\n                                <Select.Option value=\"tcp\">TCP</Select.Option>\n                                <Select.Option value=\"udp\">UDP</Select.Option>\n                                <Select.Option value=\"icmp\">ICMP</Select.Option>\n                                <Select.Option value=\"gre\">GRE</Select.Option>\n                                <Select.Option value=\"ospf\">OSPF</Select.Option>\n                                <Select.Option value=\"ah\">AH</Select.Option>\n                                <Select.Option value=\"esp\">ESP</Select.Option>\n                            </Select>\n                        </Form.Item>\n\n\n                        <Row gutter={10}>\n                            {/*<Col span={12}>*/}\n                            {/*    <Form.Item name={'tos'} label={'TOS(type of service)'} rules={[{max:4}]}>*/}\n                            {/*        <Input placeholder={'0x00'}/>*/}\n                            {/*    </Form.Item>*/}\n                            {/*</Col>*/}\n                            <Col span={24}>\n                                <Form.Item\n                                    name={'mark'}\n                                    label={'Mark'}\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: \"please input a mark\",\n                                            // max: 99,\n                                            // min: 1,\n                                            // type: \"number\",\n                                            // transform: (value) => Number(value)\n                                        }\n                                    ]}\n                                >\n                                    <Input\n                                        type={\"number\"}\n                                        min={1}\n                                        max={99}\n                                        placeholder={'1'}\n                                        onChange={v => this.formRef.current.setFieldsValue({mark: parseInt(v.target.value)})}\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n\n                        <Form.Item\n                            name={'oif'}\n                            label={'Output Interface'}\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'please choice output interface',\n                                    max: 50\n                                }\n                            ]}\n                        >\n                            <InterfaceRadio onChange={(v) => this.formRef.current.setFieldsValue({oif: v})}/>\n                        </Form.Item>\n\n                    </Form>\n\n                </Modal>\n            </Card>\n\n        )\n    }\n}\n\nexport class ArpTables  extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            datasource: []\n        }\n    }\n    getArpData = ()=>{\n        axios.get(\n            globalConfig.domain+'/api/serverInfo/arp'\n        ).then(\n            r=>this.setState({datasource: r.data.data})\n        )\n    }\n    componentDidMount() {\n        this.getArpData();\n    }\n\n    columns = [\n        {title: 'Id', dataIndex: 'id'},\n        {title: 'Ip Address', dataIndex: 'ip_addr'},\n        {title: 'HW Address', dataIndex: 'hw_addr'},\n        {title: 'Device', dataIndex: 'device'}\n    ]\n    render() {\n        return <Card title={'Arp table'}>\n            <Table columns={this.columns} pagination={false} dataSource={this.state.datasource} rowKey={record=>record.id} />\n        </Card>\n    }\n}\n","import React, {Component} from \"react\";\nimport {\n    Button, Card, Form,\n    Input, message, Modal,\n    Space, Table, Dropdown,\n    Menu, Col, Row,\n    Select, Badge, Cascader\n} from \"antd\";\nimport {arrayMoveImmutable} from 'array-move';\nimport {sortableContainer, sortableElement, sortableHandle} from 'react-sortable-hoc';\nimport {PlusOutlined, DeleteOutlined, DownOutlined, LeftOutlined, MenuOutlined} from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport {formatBytes, globalConfig} from \"../../common\";\nimport {InterfaceRadio} from \"./iproute\";\n\n\nfunction clearObject(o) {\n    let data = {}\n    for (let k in o) {\n        if (o[k] !== undefined && o[k] !== null) {\n            data[k] = o[k]\n        }\n    }\n    return data\n}\n\nconst DragHandle = sortableHandle(() => <MenuOutlined style={{cursor: 'grab', color: '#999'}}/>);\nconst SortableItem = sortableElement(props => <tr {...props} />);\nconst SortableContainer = sortableContainer(props => <tbody {...props} />);\n\nclass NewRule extends Component {\n\n    constructor(props) {\n        super(props);\n        this.formRef = React.createRef()\n        this.state = {\n            visible: {\n                to_source: false,\n                to_ports: false,\n                to_destination: false,\n                out_interface: false\n            },\n            cascaderData: []\n        }\n    }\n\n    componentDidMount() {\n        this.getCascaderData();\n    }\n\n    onSubmit = () => {\n        this.formRef.current.submit()\n    }\n\n    getCascaderData = () => {\n        axios.get(\n            globalConfig.domain + '/api/config/vip/getVipAddress'\n        ).then(\n            r => this.setState({cascaderData: r.data.data})\n        )\n    }\n\n    onFinish = (values) => {\n        values.to_source = this.formRef.current.getFieldValue('to_source')\n\n        if (this.props.chainName === undefined || this.props.chainName === null) {\n            return false;\n        }\n\n        let data = {\n            chain_name: this.props.chainName\n        }\n\n        for (let k in values) {\n            // console.log(k, '----', values[k])\n            if (values[k] !== undefined || values[k] !== null || values[k].trim() !== '') {\n                data[k] = values[k] ? values[k].replaceAll(' ', '') : values[k]\n            }\n        }\n\n        axios.post(\n            globalConfig.domain + '/api/config/iptables/setRule/' + this.props.groupType,\n            data\n        ).then(\n            () => {\n                message.success('success');\n                this.props.done();\n                // this.formRef.current.resetFields();\n            }\n        ).catch(\n            e => message.error(e.response.data.detail)\n        )\n    }\n\n    handleTargetChange = (e) => {\n        let visible = this.state.visible\n        visible.to_ports = false;\n        visible.to_source = false;\n        visible.to_destination = false;\n        visible.out_interface = false;\n\n        this.formRef.current.setFieldsValue({\n            to_ports: undefined,\n            to_source: undefined,\n            to_destination: undefined,\n            out_interface: undefined,\n            target: e.toUpperCase(),\n        })\n\n        // console.log(e)\n        // eslint-disable-next-line default-case\n        switch (e) {\n            case 'snat':\n                visible.to_source = true;\n                visible.out_interface = true;\n                break;\n            case 'masquerade':\n                // visible.to_source = true;\n                visible.out_interface = true;\n                break;\n            case 'dnat':\n                // visible.to_port = true;\n                visible.to_destination = true;\n                break;\n            case 'redirect':\n                // visible.to_destination = true;\n                visible.to_ports = true;\n                break;\n        }\n        this.setState({visible: visible})\n    }\n\n    filter = (inputValue, path) => {\n        return path.some(option => option.label.toLowerCase().indexOf(inputValue.toLowerCase()) > -1);\n    }\n\n    render() {\n\n        return (\n            <Form\n                ref={this.formRef}\n                name=\"dynamic_form_item\"\n                layout={'vertical'}\n                onFinish={this.onFinish}\n                // initialValues={formData}\n            >\n\n                <Form.Item\n                    name={'comment'}\n                    label={'Comment'}\n                    rules={[\n                        {\n                            message: 'pleas input comment',\n                            max: 18\n                        }\n                    ]}\n                >\n                    <Input placeholder={'comment'}/>\n                </Form.Item>\n\n                <Row gutter={10}>\n                    <Col span={12}>\n                        <Form.Item\n                            name={'src'}\n                            label={'Source'}\n                            rules={[{max: 18}]}\n                        >\n                            <Input placeholder={'172.16.10.0/24'}/>\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={12}>\n                        <Form.Item\n                            name={'sport'} label={'Port'}\n                            tooltip={'port or port:port or port1,port2'}\n                            // rules={[\n                            //     {\n                            //         max: 65535,\n                            //         min: 1,\n                            //         type: \"number\",\n                            //         transform: (value) => Number(value)\n                            //     }\n                            // ]}\n                        >\n                            <Input max={1024} min={1} placeholder={80}/>\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n\n                <Form.Item\n                    name={'in_interface'}\n                    label={'In Interface'}\n                    rules={[{max: 50}]}\n                >\n                    <InterfaceRadio onChange={(v) => this.formRef.current.setFieldsValue({in_interface: v})}/>\n                </Form.Item>\n\n                <Row gutter={10}>\n                    <Col span={12}>\n                        <Form.Item\n                            name={'dst'}\n                            label={'Destination'}\n                            rules={[{max: 18}]}\n                        >\n                            <Input placeholder={'172.16.20.0/24'}/>\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={12}>\n                        <Form.Item\n                            name={'dport'}\n                            label={'Port'}\n                            tooltip={'port or port:port or port1, port2'}\n                            // rules={[\n                            //     {\n                            //         max: 65535,\n                            //         min: 1,\n                            //         type: \"number\",\n                            //         transform: (value) => Number(value)\n                            //     }\n                            // ]}\n                        >\n                            <Input max={1024} min={1} placeholder={8080}/>\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n                <Form.Item name={'protocol'} label={'Protocol'}>\n                    <Select\n                        placeholder=\"Select a protocol\"\n                        allowClear\n                        onChange={e => this.formRef.current.setFieldsValue({protocol: e})}\n                    >\n                        <Select.Option value=\"tcp\">TCP</Select.Option>\n                        <Select.Option value=\"udp\">UDP</Select.Option>\n                        <Select.Option value=\"icmp\">ICMP</Select.Option>\n                        {/*<Select.Option value=\"gre\">GRE</Select.Option>*/}\n                        {/*<Select.Option value=\"ospf\">OSPF</Select.Option>*/}\n                        {/*<Select.Option value=\"ah\">AH</Select.Option>*/}\n                        {/*<Select.Option value=\"esp\">ESP</Select.Option>*/}\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    // style={{display:'None'}}\n                    name={'target'}\n                    label={'Target'}\n                    rules={[\n                        {\n                            required: true,\n                            message: 'please choice target',\n                            max: 10\n                        }\n                    ]}\n                >\n                    <Select\n                        placeholder=\"Select a target\"\n                        onChange={this.handleTargetChange}\n                        allowClear\n                    >\n\n                        {\n                            this.props.groupType === 'snat' ? (\n                                <React.Fragment>\n                                    <Select.Option value=\"snat\">SNAT</Select.Option>\n                                    <Select.Option value=\"masquerade\">MASQUERADE</Select.Option>\n                                </React.Fragment>\n                            ) : this.props.groupType === 'dnat' ? (\n                                <React.Fragment>\n                                    <Select.Option value=\"dnat\">DNAT</Select.Option>\n                                    <Select.Option value=\"redirect\">REDIRECT</Select.Option>\n                                </React.Fragment>\n                            ) : (\n                                <React.Fragment>\n                                    <Select.Option value=\"accept\">ACCEPT</Select.Option>\n                                    <Select.Option value=\"drop\">DROP</Select.Option>\n                                </React.Fragment>\n                            )\n                        }\n                    </Select>\n                </Form.Item>\n\n\n                <Form.Item\n                    hidden={!this.state.visible.to_source}\n                    // name={'to_source'}\n                    label={'To source'}\n                    // rules={[\n                    //     {\n                    //         message: 'pleas input to source',\n                    //         max: 15\n                    //     }\n                    // ]}\n                >\n                    <Cascader\n                        options={this.state.cascaderData}\n                        onChange={\n                            (v) => {\n                                let d = v[1]\n                                this.formRef.current.setFieldsValue({to_source: d});\n                            }\n                        }\n                        // displayRender={v=>v[v.length-1]}\n                        popupPlacement={'topLeft'}\n                        placeholder=\"192.168.10.1\"\n                        showSearch={{filter: this.filter}}\n                    />\n                </Form.Item>\n\n                <Form.Item\n                    hidden={!this.state.visible.out_interface}\n                    name={'out_interface'}\n                    label={'Out Interface'}\n                    rules={[{max: 50}]}\n                >\n                    <InterfaceRadio onChange={(v) => this.formRef.current.setFieldsValue({out_interface: v})}/>\n                </Form.Item>\n\n                <Form.Item\n                    hidden={!this.state.visible.to_destination}\n                    name={'to_destination'}\n                    label={'To destination'}\n                    tooltip={'ip or ip:port or ip:port-port'}\n                    rules={[\n                        {\n                            message: 'pleas input to destination',\n                            max: 200\n                        }\n                    ]}\n                >\n                    <Input placeholder={'10.10.4.1:80'}/>\n                </Form.Item>\n\n                <Form.Item\n                    hidden={!this.state.visible.to_ports}\n                    name={'to_ports'}\n                    label={'To ports'}\n                    // rules={[\n                    //     {\n                    //         message: 'pleas input to port',\n                    //     }\n                    // ]}\n                >\n                    <Input max={100} placeholder={'80'}/>\n                </Form.Item>\n\n            </Form>\n        );\n    }\n}\n\nclass NewChain extends Component {\n    constructor(props) {\n        super(props);\n        this.formRef = React.createRef();\n    }\n\n    onSubmit = () => {\n        this.formRef.current.submit()\n    }\n\n    onFinish = (values) => {\n        // console.log(this.props)\n        if (this.props.groupType === undefined || ['snat', 'dnat', 'filter'].indexOf(this.props.groupType) === -1) {\n            return false;\n        }\n\n        let url = globalConfig.domain + '/api/config/iptables/setChainGroup'\n\n        if (['snat', 'dnat'].indexOf(this.props.groupType) !== -1){\n            values.table_name = 'nat'\n        }else{\n            values.table_name = 'filter'\n        }\n\n        if (this.props.groupType !== 'filter'){\n            values.nat_mode = this.props.groupType\n        }\n\n        axios.post(\n            url, values\n        ).then(\n            () => {\n                message.success('success');\n                this.props.done();\n            }\n        ).catch(\n            e => {\n                message.error(e.response.data.detail)\n            }\n        )\n    }\n\n    render() {\n        return (\n            <Form\n                layout={'vertical'}\n                name={'addChain'}\n                onFinish={this.onFinish}\n                ref={this.formRef}\n                initialValues={\n                    {\n                        src: '0.0.0.0/0',\n                        dst: '0.0.0.0/0',\n                    }\n                }\n            >\n                <Form.Item\n                    label={'Name'}\n                    name={'chain_name'}\n                    rules={[\n                        {\n                            required: true,\n                            message: 'please input policy name',\n                            max: 30\n                        }\n                    ]}\n                >\n                    <Input placeholder={'name'}/>\n                </Form.Item>\n\n                {\n                    this.props.groupType === 'filter' ?\n                        <Form.Item\n                            name={'in_interface'}\n                            label={'In Interface'}\n                            rules={[{max: 50}]}\n                        >\n                            <InterfaceRadio onChange={(v) => this.formRef.current.setFieldsValue({in_interface: v})}/>\n                        </Form.Item> : null\n                }\n\n                <Form.Item\n                    label={'Source address'}\n                    name={'src'}\n                    rules={[\n                        {\n                            required: true,\n                            message: 'please source address',\n                            max: 18\n                        }\n                    ]}\n                >\n                    <Input placeholder={'0.0.0.0/0'}/>\n                </Form.Item>\n\n                <Form.Item\n                    label={'Destination address'}\n                    name={'dst'}\n                    rules={[\n                        {\n                            required: true,\n                            message: 'please destination address',\n                            max: 18\n                        }\n                    ]}\n                >\n                    <Input placeholder={'0.0.0.0/0'}/>\n                </Form.Item>\n\n                {/*<Form.Item*/}\n                {/*    name={'default_action'}*/}\n                {/*    label={'Default'}*/}\n                {/*    tooltip={'when all rules not match then do this'}*/}\n                {/*    initialValue={'accept'}*/}\n                {/*    rules={[{*/}\n                {/*        required: true,*/}\n                {/*        message: 'please choice a state'*/}\n                {/*    }]}*/}\n                {/*>*/}\n                {/*    <Radio.Group buttonStyle=\"solid\" style={{width: '100%'}}>*/}\n                {/*        <Radio.Button*/}\n                {/*            value=\"accept\"*/}\n                {/*            style={{width: '50%', textAlign: 'center'}}*/}\n                {/*        >Accept</Radio.Button>*/}\n                {/*        <Radio.Button*/}\n                {/*            value=\"drop\"*/}\n                {/*            style={{width: '50%', textAlign: 'center'}}*/}\n                {/*        >Drop</Radio.Button>*/}\n                {/*    </Radio.Group>*/}\n                {/*</Form.Item>*/}\n\n                {/*<Form.Item*/}\n                {/*    name={'state'}*/}\n                {/*    label={'State'}*/}\n                {/*    rules={[{*/}\n                {/*        required: true,*/}\n                {/*        message: 'please choice a state'*/}\n                {/*    }]}*/}\n                {/*    style={{marginTop: -24}}*/}\n                {/*>*/}\n                {/*    <Radio.Group buttonStyle=\"solid\" style={{width: '100%'}}>*/}\n                {/*        <Radio.Button*/}\n                {/*            value=\"e\"*/}\n                {/*            style={{width: '50%', textAlign: 'center'}}*/}\n                {/*        >Enable</Radio.Button>*/}\n                {/*        <Radio.Button*/}\n                {/*            value=\"d\"*/}\n                {/*            style={{width: '50%', textAlign: 'center'}}*/}\n                {/*        >Disable</Radio.Button>*/}\n                {/*    </Radio.Group>*/}\n                {/*</Form.Item>*/}\n            </Form>\n        )\n    }\n}\n\nexport class Chains extends Component {\n\n    constructor(props) {\n        super(props);\n        this.Child = React.createRef();\n        this.ruleRecord = null;\n        this.state = {\n            page_tag: 'chain',\n            chain_name: null,\n            disabled: false,\n\n            dataSource: [],\n\n            ruleData: [],\n            groupType: this.props.groupType,\n            modal_content: null,\n            modal_title: null,\n            visible: false,\n        }\n        // console.log(this.props)\n    }\n\n    columns = [\n        {\n            title: 'Name', dataIndex: 'chain_name', width: 200,\n            render: (v, record) => {\n                let s = {\n                    color: record.manual ? 'gray' : 'black',\n                    textDecoration: record.manual ? 'line-through' : \"none\"\n                }\n                if (record.is_rule) {\n                    s.color = 'red'\n                }\n                if (record.is_rule) {\n                    return <span style={s}>{v}</span>\n                }\n                // eslint-disable-next-line jsx-a11y/anchor-is-valid\n                return <a href={'#'} title={v} style={s} onClick={() => this.getAllRulesByChain(record)}>{v}</a>\n            }\n        },\n        {title: 'In Interface', dataIndex: 'in_interface', render:(v)=>v === null?'*':v},\n        {title: 'Source', dataIndex: 'src',},\n        {title: 'Destination', dataIndex: 'dst',},\n        {\n            title: 'Counters', children: [\n                {\n                    title: 'Packets',\n                    dataIndex: 'packets',\n                    render: v => v\n                }, {\n                    title: 'Bytes',\n                    dataIndex: 'bytes',\n                    render: v => formatBytes(v)\n                },\n\n            ]\n        },\n        // {title: 'Add Date', dataIndex: 'pub_date', render: v => v.substr(0, 16)},\n        {\n            title: 'Action',\n            dataIndex: 'id',\n            render: (v, record) => {\n                return (\n                    <Space>\n                        {/*<Button icon={<PlusOutlined/>} disabled={record.manual} onClick={() => this.handleAddRule(record)}>Insert Rule</Button>*/}\n                        <Button disabled={record.is_rule} icon={<DeleteOutlined/>}\n                                onClick={() => this.handleDeleteChain(record)}>Delete</Button>\n                    </Space>\n                )\n            }\n        },\n    ];\n\n    onSortEnd = ({oldIndex, newIndex}) => {\n        // console.log(oldIndex, newIndex)\n        const {dataSource} = this.state;\n        const old_rule_seq = dataSource[oldIndex].rule_seq\n        const new_rule_seq = dataSource[newIndex].rule_seq\n        if (old_rule_seq === -1 || new_rule_seq === -1) {\n            return Modal.info({\n                title: 'Warning',\n                content: 'some rule not enable'\n            })\n        }\n        if (oldIndex !== newIndex) {\n            axios.put(\n                globalConfig.domain + '/api/config/iptables/changeRule', {\n                    chain_name: this.state.chain_name,\n                    old_index: old_rule_seq,\n                    new_index: new_rule_seq,\n                }\n            ).then(\n                () => {\n                    const newData = arrayMoveImmutable([].concat(dataSource), oldIndex, newIndex).filter(el => !!el);\n                    console.log('Sorted items: ', newData);\n                    this.setState({dataSource: newData});\n                }\n            ).catch(\n                e => Modal.error({\n                    title: 'error',\n                    content: e.response.data.detail\n                })\n            )\n\n        }\n    };\n\n    DraggableContainer = props => {\n        return (\n            <SortableContainer\n                useDragHandle\n                disableAutoscroll\n                helperClass=\"row-dragging\"\n                onSortEnd={this.onSortEnd}\n                {...props}\n            />\n        )\n    }\n\n    DraggableBodyRow = ({className, style, ...restProps}) => {\n        const {dataSource} = this.state;\n        // console.log(restProps['data-row-key'],'data-row-key')\n        // function findIndex base on Table rowKey props and should always be a right array index\n        const index = dataSource.findIndex(x => {\n            // console.log(x.id)\n            return x.id === restProps['data-row-key']\n        });\n        // console.log(index,'index')\n        return <SortableItem index={index} {...restProps} />;\n    };\n\n    ruleMoreMenu = (record) => (\n        <Menu key={'rule_menu'} onClick={(e) => this.handleRuleAction(e, record)}>\n            <Menu.Item\n                key={record.enable === 1 ? 'pause' : 'resume'}\n            >\n                {record.enable === 1 ? 'Pause' : 'Resume'}\n            </Menu.Item>\n\n            <Menu.Item key={'delete'}>\n                Delete\n            </Menu.Item>\n        </Menu>\n    )\n\n    ruleColumns = [\n        {title: 'Sort', dataIndex: 'rule_seq', width: 70, render: () => <DragHandle/>, fixed: 'left'},\n        // {title: 'Comment', dataIndex: 'comment', fixed: 'left', width: 150},\n        {\n            title: 'Source',\n            children: [\n                {title: 'addr', dataIndex: 'src', width: 180},\n                {title: 'port', dataIndex: 'sport', width: 130, render: v => v ? v.replaceAll(' ', '') : null},\n            ]\n        },\n        {\n            title: 'Destination',\n            width: 250,\n            children: [\n                {title: 'addr', dataIndex: 'dst', width: 180},\n                {title: 'port', dataIndex: 'dport', width: 130, render: v => v ? v.replaceAll(' ', '') : null},\n            ]\n        },\n        {title: 'Protocol', dataIndex: 'protocol', width: 95},\n        {title: 'In Interface', dataIndex: 'in_interface', width: 120},\n        {\n            title: 'Target',\n            children: [\n                {title: 'Action', dataIndex: 'target', width: 100},\n                {title: 'Out Interface', dataIndex: 'out_interface', width: 130},\n                {title: 'To Destination', dataIndex: 'to_destination', width: 150},\n                {title: 'To source', dataIndex: 'to_source', width: 150},\n                {title: 'To ports', dataIndex: 'to_ports', width: 150},\n            ]\n        },\n\n        {\n            title: 'Status',\n            children: [\n                {\n                    title: 'State',\n                    dataIndex: 'enable',\n                    width: 105,\n                    render: (v) => <Badge status={v === 1 ? 'processing' : 'error'}\n                                          text={v === 1 ? 'running' : 'disabled'}/>\n                },\n                {title: 'Packets', dataIndex: 'packets', width: 120},\n                {title: 'Bytes', dataIndex: 'bytes', width: 120, render: (v) => formatBytes(v)}\n            ]\n        },\n        {\n            title: 'Operate', dataIndex: 'id', fixed: 'right', width: 100, render: (v, record) => {\n                return (\n                    <Dropdown disabled={this.state.disabled} overlay={this.ruleMoreMenu(record)} trigger={['click']}>\n                        {/*eslint-disable-next-line*/}\n                        <a>\n                            More <DownOutlined/>\n                        </a>\n                    </Dropdown>\n                )\n            }\n        },\n    ]\n\n    componentDidMount() {\n        this.getAllChains(this.props);\n    }\n\n    handleRuleAction = (e, record) => {\n        let chain_name = record.id > 0 ? record.chain.chain_name : record.chain_name\n        // eslint-disable-next-line default-case\n        switch (e.key.toLowerCase()) {\n            case 'pause':\n                record.enable = 0;\n                this.pauseAndResumeEvent(record);\n                break;\n            case 'resume':\n                record.enable = 1;\n                this.pauseAndResumeEvent(record);\n                break;\n            case 'delete':\n                Modal.confirm({\n                    title: 'delete rule',\n                    content: 'deleting rule from ' + chain_name,\n                    okType: \"danger\",\n                    onOk: () => {\n                        let data = clearObject(record)\n                        data.chain_name = chain_name\n                        axios.delete(\n                            globalConfig.domain + '/api/config/iptables/setRule/' + this.props.groupType, {\n                                data: data\n                            }\n                        ).then(\n                            () => {\n                                message.success('success');\n                                this.getAllRulesByChain({chain_name: this.state.chain_name})\n                            }\n                        ).catch(e => message.error(e.response.data.detail))\n                    }\n                })\n                break;\n        }\n    }\n\n    pauseAndResumeEvent = (record) => {\n        let chain_name = record.id > 0 ? record.chain.chain_name : record.chain_name;\n        let data = clearObject(record);\n        data.chain_name = chain_name;\n        axios.put(\n            globalConfig.domain + '/api/config/iptables/setRule/' + this.props.groupType, data\n        ).then(\n            () => {\n                message.success('success');\n                this.getAllRulesByChain({chain_name: this.state.chain_name})\n            }\n        ).catch(e => message.error(e.response.data.detail))\n    }\n\n    getAllChains = (props) => {\n        if (['snat', 'dnat', 'filter'].indexOf(props.groupType) === -1) {\n            return false;\n        }\n        axios.get(\n            globalConfig.domain + '/api/serverInfo/iptables/getAllChain', {\n                params: {\n                    group_type: props.groupType\n                }\n            }\n        ).then(\n            ret => {\n                this.setState({\n                    dataSource: ret.data.data,\n                    page_tag: 'chain'\n                })\n            }\n        )\n    }\n\n    onOk = () => {\n        this.Child.current.onSubmit()\n    }\n\n    onCancel = () => {\n        this.setState({visible: false, modal_content: null})\n    }\n\n    getAllRulesByChain = (record) => {\n        let table_name = this.props.groupType === 'filter' ? 'filter' : 'nat'\n        axios.get(\n            globalConfig.domain + '/api/serverInfo/iptables/getAllRulesByChain', {\n                params: {\n                    chain_name: record.chain_name,\n                    table_name: table_name,\n                }\n            }\n        ).then(r => {\n            this.setState({\n                dataSource: r.data.data,\n                page_tag: 'rule',\n                disabled: record.manual,\n                chain_name: record.chain_name\n            })\n        })\n    }\n\n    handleDeleteChain = (record) => {\n        // let data = {\n        //     table_name: record.table_name,\n        //     chain_name: record.chain_name,\n        //     nat_mode: record.group_type,\n        //     src: record.src,\n        //     dst: record.dst\n        // }\n\n        if (record.table_name === 'nat') {\n            record.nat_mode = record.group_type\n        }\n\n        for (let i in record){\n            if (record[i] === null){\n                delete record[i]\n            }\n        }\n\n        Modal.confirm({\n            title: 'deleting policy',\n            content: 'delete policy will delete all relate rules',\n            okType: 'danger',\n            onOk: () => {\n                axios.delete(\n                    globalConfig.domain + '/api/config/iptables/setChainGroup',\n                    {\n                        data: record\n                    }\n                ).then(\n                    () => {\n                        message.success('success');\n                        this.getAllChains(this.props)\n                    }\n                ).catch(\n                    e => message.error(e.response.data.detail)\n                )\n            }\n        })\n    }\n\n    subComponentDone = () => {\n        this.setState({visible: false});\n        if (this.state.page_tag === 'chain') {\n            this.getAllChains(this.props);\n        } else {\n            this.getAllRulesByChain({chain_name: this.state.chain_name});\n        }\n    }\n\n    handleAddChainGroup = () => {\n        this.setState({\n            visible: true,\n            modal_content: <NewChain done={this.subComponentDone} ref={this.Child} groupType={this.props.groupType}/>,\n            modal_title: 'Add ' + this.props.groupType.toUpperCase() + ' Policy'\n        })\n    }\n\n    handleAddRule = (chain_name) => {\n        let c = <NewRule done={this.subComponentDone} ref={this.Child} groupType={this.props.groupType}\n                         chainName={chain_name}/>\n        this.setState({\n            visible: true,\n            modal_content: c,\n            modal_title: 'Add rule to ' + chain_name + ' policy'\n        })\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.groupType !== prevProps.groupType) {\n            this.getAllChains(this.props)\n        }\n    }\n\n    render() {\n        return (\n            <Card title={this.props.titleName + ' Policy'}>\n                <Space style={{width: '100%'}} direction={'vertical'} size={'large'}>\n                    {\n                        this.state.page_tag === 'chain' ? (\n                            <Button\n                                type={'primary'}\n                                icon={<PlusOutlined/>}\n                                onClick={this.handleAddChainGroup}\n                            >\n                                Add Policy\n                            </Button>\n                        ) : (\n                            <Space>\n                                <Button\n                                    icon={<LeftOutlined/>}\n                                    onClick={() => this.getAllChains(this.props)}\n                                >\n                                    Back\n                                </Button>\n                                <Button\n                                    icon={<PlusOutlined/>}\n                                    disabled={this.state.disabled}\n                                    onClick={\n                                        () => this.handleAddRule(this.state.chain_name)\n                                    }\n                                >\n                                    Insert Rule\n                                </Button>\n                            </Space>\n                        )\n                    }\n\n                    <Table\n                        pagination={false}\n                        dataSource={this.state.dataSource}\n                        columns={this.state.page_tag === 'chain' ? this.columns : this.ruleColumns}\n                        rowKey={(record) => record.id}\n                        scroll={{x: 1300}}\n                        components={this.state.page_tag === 'chain' ? {} : {\n                            body: {\n                                wrapper: this.DraggableContainer,\n                                row: this.DraggableBodyRow,\n                            },\n                        }}\n                        // bordered\n                    />\n                </Space>\n\n                <Modal\n                    destroyOnClose={true}\n                    title={this.state.modal_title}\n                    visible={this.state.visible}\n                    onOk={this.onOk}\n                    onCancel={this.onCancel}\n                >\n                    {this.state.modal_content}\n                </Modal>\n            </Card>\n        )\n    }\n}","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgOpenvpn(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    t: 1638858479414,\n    className: \"icon\",\n    viewBox: \"0 0 1024 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"p-id\": 1667,\n    width: 200,\n    height: 200,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M512 15.573333C229.76 15.573333 0 243.072 0 523.093333c0 186.026667 100.608 347.904 251.562667 435.413334l32.853333-216.576A300.629333 300.629333 0 0 1 205.653333 540.586667c0-166.272 135.68-301.909333 304.213334-301.909334 168.448 0 304.042667 135.637333 304.042666 301.909334 0 78.805333-30.592 148.821333-78.762666 203.52l32.853333 216.661333c153.173333-87.509333 256-251.690667 256-437.674667C1024 243.072 794.24 15.573333 512 15.573333z m-2.133333 347.989334a161.536 161.536 0 0 0-161.962667 161.92 159.488 159.488 0 0 0 105.002667 151.04L389.546667 1009.066667h240.64l-61.226667-332.586667c59.093333-24.064 102.826667-80.981333 102.826667-150.997333a161.536 161.536 0 0 0-161.92-161.92z\",\n    \"p-id\": 1668\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOpenvpn);\nexport default __webpack_public_path__ + \"static/media/openvpn.1a0f6d22.svg\";\nexport { ForwardRef as ReactComponent };","import {Component} from \"react\";\nimport {Card, message, Checkbox} from \"antd\";\nimport axios from \"axios\";\nimport {globalConfig} from \"../../common\";\n\n\nexport class System extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: []\n        }\n    }\n\n    componentDidMount() {\n        this.getDataFromServer();\n    }\n\n    getDataFromServer = () => {\n        axios.get(\n            globalConfig.domain + '/api/config/sys/sysConfig'\n        ).then(r => this.setState({data: r.data.data}))\n    }\n\n\n    handleSwitchChange = (k, e) => {\n        // console.log(k,e.target.checked)\n        axios.post(\n            globalConfig.domain + '/api/config/sys/sysConfig', {\n                item: k,\n                value: e.target.checked\n            }\n        ).then(\n            ()=>this.getDataFromServer()\n        ).catch(\n            e=>message.error(e.response.data.detail)\n        )\n    }\n\n    render() {\n        return (\n            <Card title={'System setting'}>\n                {\n                    this.state.data.map((item, index)=>{\n                        return <p key={index}>\n                            <Checkbox\n                                checked={item.value}\n                                onChange={(e) => this.handleSwitchChange(item.item, e)}\n                            >\n                                {item.desc}\n                            </Checkbox>\n                        </p>\n                    })\n                }\n            </Card>\n        )\n    }\n\n}","import React, {Component} from \"react\";\nimport {Badge, Button, Card, Table, Space, Modal, Form, Input, Select, Radio, message} from \"antd\";\nimport {EditOutlined, DeleteOutlined, PlusOutlined} from \"@ant-design/icons\";\nimport {globalConfig} from \"../../common\";\nimport axios from \"axios\";\n\n\nexport class Vip extends Component {\n    constructor(props) {\n        super(props);\n        this.formRef = React.createRef()\n        this.start_ip = '';\n        this.end_ip = '';\n        this.editData = {};\n\n        this.state = {\n            dateSource: [],\n            visible: false,\n        }\n    }\n\n    isp2cn = (v) => {\n        let result = ''\n        // eslint-disable-next-line default-case\n        switch (v) {\n            case 'china-mobile':\n                result = '移动';\n                break;\n\n            case 'telecom':\n                result = '电信';\n                break;\n\n            case 'unicom':\n                result = '联通';\n                break;\n\n            case 'private':\n                result = '私有';\n                break;\n\n            case 'other':\n                result = '其它';\n                break;\n        }\n        return result\n    }\n\n    handleDeleteVip = (id) => {\n        return Modal.confirm({\n            title: 'delete vip pool',\n            okType: \"danger\",\n            onOk: () => {\n                axios.delete(\n                    globalConfig.domain + '/api/config/vip/setVip', {\n                        params: {\n                            id: id\n                        }\n                    }\n                ).then(\n                    r => {\n                        message.success(r.data.msg);\n                        this.getAllRecord();\n                    }\n                )\n            }\n        })\n    }\n\n    columns = [\n        {title: 'Name', dataIndex: 'name',},\n        {title: 'Address Range', dataIndex: 'ip_range', render: v => v.replaceAll('-', ' - ')},\n        {title: 'ISP', dataIndex: 'isp', render: v => this.isp2cn(v)},\n        {\n            title: 'State',\n            dataIndex: 'state',\n            render: (v) => v.toLowerCase() === 'e' ? <Badge status=\"success\" text={'enable'}/> :\n                <Badge status=\"error\" text={'disable'}/>\n        },\n\n        {title: 'Pub Date', dataIndex: 'pub_date', render: v => v.substr(0, 16)},\n        {\n            title: 'Action', dataIndex: 'id', render: (v, record) => {\n                return (\n                    <Space>\n                        <Button icon={<EditOutlined/>} onClick={\n                            () => {\n                                let x = record.ip_range.split('-')\n                                this.start_ip = x[0]\n                                this.end_ip = x[1]\n                                this.editData = record;\n                                this.setState({visible: true})\n                            }\n                        }>Edit</Button>\n                        <Button icon={<DeleteOutlined/>} onClick={() => this.handleDeleteVip(v)}>Delete</Button>\n                    </Space>\n                )\n            }\n        },\n    ];\n\n    getAllRecord = () => {\n        axios.get(\n            globalConfig.domain + '/api/config/vip/setVip'\n        ).then(\n            r => this.setState({dataSource: r.data.data})\n        )\n    }\n\n    componentDidMount() {\n        this.getAllRecord();\n    }\n\n\n    onFinish = (v) => {\n        let url = globalConfig.domain + '/api/config/vip/setVip'\n        let req;\n        if (this.editData.id !== undefined && this.editData.id > 0) {\n            url += '?id=' + this.editData.id\n            req = axios.put(\n                url, v\n\n            )\n        } else {\n            req = axios.post(\n                url, v\n            )\n        }\n\n        req.then(\n            r => {\n                message.success(r.data.msg);\n                this.getAllRecord();\n                this.setState({visible: false})\n            }\n        ).catch(\n            e => message.error(e.response.data.detail)\n        )\n    }\n\n    render() {\n        return (\n            <Card title={'Virtual Ip Pool'}>\n                <Space direction={'vertical'} size={'middle'} style={{width: '100%'}}>\n                    <Button type={'primary'} icon={<PlusOutlined/>} onClick={() => this.setState({visible: true})}>Add\n                        Ip Pool</Button>\n                    <Table\n                        pagination={false}\n                        dataSource={this.state.dataSource}\n                        columns={this.columns}\n                        rowKey={(record) => record.id}\n                    />\n                </Space>\n                <Modal\n                    destroyOnClose={true}\n                    title={\"add virtual ip pool\"}\n                    visible={this.state.visible}\n                    onOk={() => this.formRef.current.submit()}\n                    onCancel={\n                        () => {\n                            this.start_ip = '';\n                            this.end_ip = '';\n                            this.setState({visible: false});\n                            this.editData = {};\n                        }\n                    }\n                >\n                    <Form\n                        ref={this.formRef}\n                        onFinish={this.onFinish}\n                        layout={'vertical'}\n                        initialValues={this.editData}\n                    >\n                        <Form.Item\n                            name={'name'}\n                            label={'Name'}\n                            rules={[\n                                {\n                                    required: true,\n                                    max: 20,\n                                    message: 'please input a name'\n                                }\n                            ]}\n                        >\n                            <Input placeholder={'pool name'} max={20}/>\n                        </Form.Item>\n\n                        <Form.Item\n                            name={'ip_range'}\n                            label={'IP Range'}\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'please input ip range',\n                                    max: 31,\n                                }\n                            ]}\n                        >\n                            <Input.Group compact>\n                                <Input\n                                    style={{textAlign: 'center', width: '45%'}} max={15}\n                                    placeholder=\"192.168.100.1\"\n                                    defaultValue={this.start_ip}\n                                    onChange={\n                                        v => {\n                                            this.start_ip = v.target.value;\n                                            this.formRef.current.setFieldsValue({\n                                                ip_range: this.start_ip + '-' + this.end_ip\n                                            })\n                                        }\n                                    }\n                                />\n                                <Input\n                                    // className=\"site-input-split\"\n                                    style={{\n                                        width: '10%',\n                                        textAlign: 'center',\n                                        borderLeft: 0,\n                                        borderRight: 0,\n                                        pointerEvents: 'none',\n                                    }}\n                                    placeholder=\"-\"\n                                    disabled\n                                />\n                                <Input\n                                    max={15}\n                                    className=\"site-input-right\"\n                                    style={{\n                                        width: '45%',\n                                        textAlign: 'center',\n                                    }}\n                                    defaultValue={this.end_ip}\n                                    placeholder=\"192.168.100.10\"\n                                    onChange={\n                                        v => {\n                                            this.end_ip = v.target.value;\n                                            this.formRef.current.setFieldsValue({\n                                                ip_range: this.start_ip + '-' + this.end_ip\n                                            })\n                                        }\n                                    }\n                                />\n                            </Input.Group>\n                        </Form.Item>\n\n                        <Form.Item\n                            name={'isp'}\n                            label={'Isp'}\n                            rules={[{\n                                required: true,\n                                message: 'please choice a isp'\n                            }]}\n                        >\n                            <Select>\n                                <Select.Option value=\"telecom\">电信</Select.Option>\n                                <Select.Option value=\"unicom\">联通</Select.Option>\n                                <Select.Option value=\"china-mobile\">移动</Select.Option>\n                                <Select.Option value=\"private\">私有</Select.Option>\n                                <Select.Option value=\"other\">其它</Select.Option>\n                            </Select>\n                        </Form.Item>\n\n                        <Form.Item\n                            name={'state'}\n                            label={'State'}\n                            rules={[{\n                                required: true,\n                                message: 'please choice a state'\n                            }]}\n                        >\n                            <Radio.Group buttonStyle=\"solid\" style={{width: '100%'}}>\n                                <Radio.Button value=\"e\"\n                                              style={{width: '50%', textAlign: 'center'}}>Enable</Radio.Button>\n                                <Radio.Button value=\"d\"\n                                              style={{width: '50%', textAlign: 'center'}}>Disable</Radio.Button>\n                            </Radio.Group>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </Card>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport {Button, Card, Form, Input, Modal, Space, Table, message, InputNumber} from \"antd\";\nimport {PlusOutlined, DeleteOutlined} from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport {globalConfig} from \"../../common\";\n\n\nexport class BWList extends Component{\n    constructor(props) {\n        super(props);\n        this.child = React.createRef()\n        this.state = {\n            dataSource: [],\n            visible: false\n        }\n    }\n\n    get_all_host_from_server(){\n        axios.get(\n            globalConfig.domain+'/api/config/sys/ipset',{\n                params: {\n                    type: this.props.type\n                }\n            }\n        ).then(\n            r=>this.setState({dataSource: r.data.data})\n        )\n    }\n\n    handleAddHostToList = ()=>{\n        this.setState({visible: true})\n    }\n\n    onCancel = ()=>{\n        this.setState({visible: false})\n    }\n\n    onOk = ()=>{\n        this.child.current.submit()\n    }\n\n    onFinish = (values)=>{\n        axios.post(\n            globalConfig.domain+'/api/config/sys/ipset', values,{\n                params:{\n                    type: this.props.type\n                }\n            }\n        ).then(\n            r=>{\n                message.success(r.data.msg);\n                this.setState({visible: false});\n                this.get_all_host_from_server();\n            }\n        ).catch(\n            e=>Modal.error({title: \"error!\", content: e.response.data.detail})\n        )\n    }\n\n    componentDidMount() {\n        this.get_all_host_from_server();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.type !== prevProps.type){\n            this.get_all_host_from_server();\n        }\n    }\n\n    deleteIpSetRecord=(v)=>{\n        axios.delete(\n            globalConfig.domain+'/api/config/sys/ipset',{\n                params:{\n                    type:this.props.type\n                },\n                data:{\n                    ip: v.ip\n                }\n            }\n        ).then(\n            r=>{\n                message.success(r.data.msg);\n                this.get_all_host_from_server();\n            }\n\n        ).catch(\n            e=>message.error(e.response.data.detail)\n        )\n    }\n\n    columns = [\n        {title: 'Id', dataIndex: 'id'},\n        {title: 'Ip', dataIndex: 'ip'},\n        {title: 'Timeout', dataIndex: 'timeout'},\n        {title: 'Action', key: 'action', render:(record)=><Button icon={<DeleteOutlined/>} onClick={()=>this.deleteIpSetRecord(record)}>Delete</Button>\n        }\n    ]\n\n    render() {\n        return (\n            <Card title={this.props.title}>\n                <Space style={{width: '100%'}} direction={'vertical'} size={'large'}>\n                    <Button\n                        type={'primary'}\n                        icon={<PlusOutlined/>}\n                        onClick={this.handleAddHostToList}\n                    >\n                        Add Host\n                    </Button>\n                    <Table\n                        pagination={false}\n                        dataSource={this.state.dataSource}\n                        columns={this.columns}\n                        rowKey={(record) => record.id}\n                    />\n                </Space>\n                <Modal\n                    destroyOnClose={true}\n                    title={'Add host to '+this.props.title}\n                    visible={this.state.visible}\n                    onOk={this.onOk}\n                    onCancel={this.onCancel}\n                >\n                    <Form name={'form'} layout={'vertical'} ref={this.child} onFinish={this.onFinish}>\n                        <Form.Item\n                            name={'ip'}\n                            label={'Ip Address'}\n                            rules={\n                                [\n                                    {\n                                        required:true,\n                                        message: 'please input a correct ip address',\n                                        max: 18,\n                                    }\n                                ]\n                            }\n                        >\n                            <Input placeholder={'10.10.10.1'} />\n                        </Form.Item>\n\n                        <Form.Item\n                            name={'timeout'}\n                            label={'Timeout'}\n                            initialValue={0}\n                        >\n                            <InputNumber max={86400} min={0} onChange={v=>this.child.current.setFieldsValue({timeout:parseInt(v)})} />\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </Card>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport {Breadcrumb, Layout, Menu} from \"antd\";\nimport {SwapOutlined, BlockOutlined, ApartmentOutlined, SettingOutlined, RadarChartOutlined, ForkOutlined} from \"@ant-design/icons\";\n\nimport {Interfaces, StaticRoute, PolicyRoute} from \"./component/iproute\";\nimport {Chains} from \"./component/iptables\";\nimport {System} from \"./component/system\";\nimport {Vip} from \"./component/vip\";\nimport {BWList} from \"./component/ipset\";\nimport {ArpTables} from \"./component/iproute\";\n\nconst {Sider, Content} = Layout\nconst {SubMenu} = Menu\n\nexport class Config extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            content: <Interfaces/>\n        }\n    }\n\n    handleMenuClick = (e) => {\n        // console.log(e.key)\n        // eslint-disable-next-line default-case\n        switch (e.key) {\n            case 'interfaces':\n                this.setState({content: <Interfaces/>})\n                break;\n            case 'arp':\n                this.setState({content: <ArpTables/>})\n                break;\n            case 's_route':\n                this.setState({content: <StaticRoute/>})\n                break;\n            case 'vip':\n                this.setState({content: <Vip/>})\n                break;\n            case 'p_route':\n                this.setState({content: <PolicyRoute/>})\n                break;\n            case 'snat':\n                this.setState({content: <Chains titleName={'Nat'} groupType={e.key}/>})\n                break;\n            case 'dnat':\n                this.setState({content: <Chains titleName={'Port Map'} groupType={e.key}/>})\n                break;\n            case 'filter':\n                this.setState({content: <Chains titleName={'Forward'} groupType={e.key}/>})\n                break;\n            case 'system':\n                this.setState({content: <System/>})\n                break;\n            case 'blacklist':\n                this.setState({content: <BWList title={\"Black List\"} type={\"blacklist\"} />})\n                break;\n            case 'whitelist':\n                this.setState({content: <BWList title={\"White List\"} type={\"whitelist\"}/>})\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Breadcrumb style={{margin: '16px 0'}}>\n                    <Breadcrumb.Item>Home</Breadcrumb.Item>\n                    <Breadcrumb.Item>Config</Breadcrumb.Item>\n                </Breadcrumb>\n                <Layout className=\"site-layout-background\" style={{padding: '24px 0'}}>\n                    <Sider className=\"site-layout-background\" width={200}>\n                        <Menu\n                            mode=\"inline\"\n                            defaultSelectedKeys={['interfaces']}\n                            // defaultOpenKeys={['sub1']}\n                            style={{height: '100%'}}\n                            onClick={this.handleMenuClick}\n                        >\n                            <Menu.Item key=\"interfaces\" icon={<ApartmentOutlined />}>Interfaces</Menu.Item>\n                            <Menu.Item key=\"arp\" icon={<ForkOutlined />}>Arp</Menu.Item>\n                            <Menu.Item key=\"vip\" icon={<RadarChartOutlined />}>VIP</Menu.Item>\n\n                            <SubMenu key=\"route\" icon={<BlockOutlined />} title=\"Route\">\n                                <Menu.Item key=\"s_route\">Static Route</Menu.Item>\n                                <Menu.Item key=\"p_route\">Policy Route</Menu.Item>\n                            </SubMenu>\n\n                            <SubMenu key=\"policy\" icon={<SwapOutlined />} title=\"Policy\">\n                                <Menu.Item key=\"snat\">Nat</Menu.Item>\n                                <Menu.Item key=\"dnat\">Port map</Menu.Item>\n                                <Menu.Item key=\"filter\">Forward</Menu.Item>\n                            </SubMenu>\n                            <SubMenu key=\"system_submenu\" icon={<SettingOutlined />} title={'System'}>\n                                <Menu.Item key=\"system\">System</Menu.Item>\n                                <Menu.Item key=\"blacklist\">Black List</Menu.Item>\n                                <Menu.Item key=\"whitelist\">White List</Menu.Item>\n                                <Menu.Item key=\"user\">User</Menu.Item>\n                            </SubMenu>\n                        </Menu>\n                    </Sider>\n                    <Content style={{padding: '0 8px', minHeight: 280}}>{this.state.content}</Content>\n                </Layout>\n            </React.Fragment>\n        )\n    }\n}\n","import {Component} from \"react\";\nimport {Card, message, Table} from \"antd\";\nimport {globalConfig} from \"../../common\";\nimport axios from \"axios\";\n\n\nexport class Sessions extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSource: []\n        }\n    }\n\n    componentDidMount() {\n        this.getSessionData();\n    }\n\n    getSessionData = () => {\n        axios.get(\n            globalConfig.domain + '/api/serverInfo/getSysConnSessions'\n        ).then(\n            r => this.setState({dataSource: r.data.data})\n        ).catch(\n            e => message.error(e.response.data.detail)\n        )\n    }\n\n    columns = [\n        {title: 'Protocol', dataIndex: 'protocol'},\n        {title: 'State', dataIndex: 'tcp_flag'},\n        // {title: 'State', dataIndex: 'state', },\n        {title: 'TTL', dataIndex: 'ttl'},\n        {\n            title: 'Request',\n            children: [\n                {title: 'Source', dataIndex: 'req_src'},\n                {title: 'Destination', dataIndex: 'req_dst'},\n            ]\n        },\n        {\n            title: 'Response',\n            children: [\n                {title: 'Source', dataIndex: 'rep_src'},\n                {title: 'Destination', dataIndex: 'rep_dst'},\n            ]\n        },\n        {title: 'Mark', dataIndex: 'mark'}\n    ]\n\n    render() {\n        return (\n            <Card title={'Session List'}>\n                {/*<div>*/}\n                {/*    {this.state.data.map(item=><p>{item}</p>)}*/}\n                {/*</div>*/}\n                <Table columns={this.columns} dataSource={this.state.dataSource} pagination={false}/>\n            </Card>\n        )\n    }\n}\n","import {Component} from \"react\";\nimport axios from \"axios\";\nimport {globalConfig} from \"../../common\";\nimport {Card} from \"antd\";\n\nexport class RunningConfig extends Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            data:[]\n        }\n    }\n\n    getRunningConfig=()=>{\n        axios.get(\n            globalConfig.domain+'/api/config/sys/getRunningConfig'\n        ).then(\n            r=>this.setState({data: r.data.data})\n        )\n    }\n\n    componentDidMount() {\n        this.getRunningConfig();\n    }\n\n    render() {\n        return (\n            <Card title={'Running Config'}>\n                <div>\n                    {this.state.data.map(item=><p>{item}</p>)}\n                </div>\n            </Card>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport {Breadcrumb, Layout, Menu} from \"antd\";\nimport {ExceptionOutlined, ReloadOutlined } from \"@ant-design/icons\";\n\nimport {Sessions} from \"./component/sessions\";\nimport {RunningConfig} from \"./component/runningConfig\";\n\nconst {Sider, Content} = Layout\n\nexport class Report extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            content: <Sessions />\n        }\n    }\n\n    handleMenuClick = (e) => {\n        //console.log(e.key)\n        //eslint-disable-next-line default-case\n        switch (e.key) {\n            case 'sessions':\n                this.setState({content: <Sessions/>})\n                break;\n            case 'run_config':\n                this.setState({content: <RunningConfig/>})\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Breadcrumb style={{margin: '16px 0'}}>\n                    <Breadcrumb.Item>Home</Breadcrumb.Item>\n                    <Breadcrumb.Item>Report</Breadcrumb.Item>\n                </Breadcrumb>\n                <Layout className=\"site-layout-background\" style={{padding: '24px 0'}}>\n                    <Sider className=\"site-layout-background\" width={200}>\n                        <Menu\n                            mode=\"inline\"\n                            defaultSelectedKeys={['event']}\n                            // defaultOpenKeys={['sub1']}\n                            style={{height: '100%'}}\n                            onClick={this.handleMenuClick}\n                        >\n\n                            <Menu.Item key=\"sessions\" icon={<ExceptionOutlined />}>Sessions</Menu.Item>\n                            <Menu.Item key=\"run_config\" icon={<ReloadOutlined />}>Configuration</Menu.Item>\n                            {/*<SubMenu key=\"sub2\" icon={<LaptopOutlined/>} title=\"Route\">*/}\n                            {/*    <Menu.Item key=\"s_route\">static route</Menu.Item>*/}\n                            {/*    <Menu.Item key=\"6\">policy route</Menu.Item>*/}\n                            {/*</SubMenu>*/}\n                        </Menu>\n                    </Sider>\n                    <Content style={{padding: '0 8px', minHeight: 280}}>{this.state.content}</Content>\n                </Layout>\n            </React.Fragment>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport {Form, Input} from \"antd\";\n\n\nexport class ChangePassword extends Component{\n    constructor(props) {\n        super(props);\n        this.formRef = React.createRef();\n    }\n\n    submit = ()=>{\n        this.formRef.current.submit();\n    }\n\n    render() {\n        return (\n            <Form layout={'vertical'} ref={this.formRef} onFinish={this.props.onFinish}>\n\n                <Form.Item\n                    name=\"old_pwd\"\n                    label=\"Old Password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your old password!',\n                        },\n                    ]}\n                    hasFeedback\n                >\n                    <Input.Password placeholder=\"old password\"/>\n                </Form.Item>\n\n\n                <Form.Item\n                    name=\"pwd1\"\n                    label=\"New Password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your password!',\n                        },\n                    ]}\n                    hasFeedback\n                >\n                    <Input.Password placeholder=\"new password\"/>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"pwd2\"\n                    label=\"Confirm Password\"\n                    dependencies={['pwd1']}\n                    hasFeedback\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please confirm your password!',\n                        },\n                        ({getFieldValue}) => ({\n                            validator(_, value) {\n                                if (!value || getFieldValue('pwd1') === value) {\n                                    return Promise.resolve();\n                                }\n                                return Promise.reject(new Error('The two passwords that you entered do not match!'));\n                            },\n                        }),\n                    ]}\n                >\n                    <Input.Password placeholder=\"confirm password\"/>\n                </Form.Item>\n            </Form>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport {\n    Badge,\n    Button,\n    Card,\n    Form,\n    Input,\n    message,\n    Modal,\n    Space,\n    Spin,\n    Table,\n    Alert\n} from \"antd\";\nimport axios from \"axios\";\nimport {globalConfig} from \"../../common\";\nimport {\n    DownloadOutlined,\n    DeleteOutlined,\n    PlusOutlined,\n    ControlOutlined,\n    SafetyCertificateOutlined\n} from \"@ant-design/icons\";\n\nlet styles = {\n    itemField: {\n        display: 'inline-block',\n        fontWeight: 'bolder',\n        width: 150,\n        paddingRight: 20,\n        textAlign: 'left',\n        height: 28,\n    },\n    spin: {\n        position: 'absolute',\n        left: 0,\n        top: '50%',\n        right: 0,\n        bottom: '50%',\n    }\n}\n\nexport class OpenVpnStatus extends Component {\n    constructor(props) {\n        super(props);\n        this.formRef = React.createRef();\n        this.state = {\n            status: '',\n            server: '',\n            dns: '8.8.4.4',\n            listen_port: 1194,\n            listen_ip: '10.10.0.1',\n            loading: false,\n            modal_spin: false,\n            visible: false,\n        }\n    }\n\n    get_openvpn_server_status = () => {\n        axios.get(\n            globalConfig.domain + '/api/apps/openvpn/getOpenVpnStatus'\n        ).then(\n            r => {\n                this.setState(r.data.data);\n            }\n        )\n    }\n\n    start_or_stop_server = (cmd) => {\n        if (cmd !== 'start' && cmd !== 'stop') {\n            message.error('error command')\n            return\n        }\n        let post_data = this.state;\n        post_data.status = cmd;\n        for (let i in post_data) {\n            if (post_data[i] === undefined || post_data[i] === null || post_data[i].length === 0) {\n                message.error(i + ' field is empty!')\n                return;\n            }\n        }\n        // console.log(post_data)\n        this.setState({loading: true});\n        axios.post(\n            globalConfig.domain + '/api/apps/openvpn/startOrStopServer',\n            post_data\n        ).then(\n            r => {\n                message.success(r.data.msg);\n                this.setState({loading: false});\n                this.get_openvpn_server_status();\n            }\n        ).catch(\n            e => message.error(e.response.data.detail)\n        )\n\n    }\n\n    onFinish=(values)=>{\n        this.setState({modal_spin: true})\n        axios.post(\n            globalConfig.domain+'/api/apps/openvpn/genCert', values\n        ).then(\n            r=>{\n                message.success(r.data.msg);\n                this.setState({visible: false, modal_spin: false})\n            }\n        ).catch(\n            e=>{\n                message.error(e.response.data.detail);\n                this.setState({modal_spin: false})\n            }\n        )\n    }\n\n    componentDidMount() {\n        this.get_openvpn_server_status();\n    }\n\n    render() {\n        return <Card title={'OpenVPN server status'}>\n            <Spin spinning={this.state.loading}>\n                <p>\n                    <b style={styles.itemField}>Status</b>\n                    <Badge status={this.state.status === 'running' ? 'success' : 'error'} text={this.state.status}/>\n                    <Button type={'link'} onClick={\n                        () => this.start_or_stop_server(this.state.status === 'running' ? 'stop' : 'start')\n                    }>{this.state.status === 'running' ? 'stop' : 'start'}</Button>\n                    <Button\n                        type={'primary'}\n                        shape=\"circle\"\n                        style={{float: 'right'}}\n                        disabled={this.state.status === 'running'}\n                        onClick={()=>this.setState({visible: true})}\n                        icon={<SafetyCertificateOutlined />}\n                    />\n                </p>\n                {\n                    this.state.status === 'running' ? (\n                        <div>\n                            <p><b style={styles.itemField}>Protocol</b>udp</p>\n                            <p><b style={styles.itemField}>Listen IP</b>{this.state.listen_ip}</p>\n                            <p><b style={styles.itemField}>Listen Port</b>{this.state.listen_port}</p>\n                            <p><b style={styles.itemField}>Server Network</b>{this.state.server}</p>\n                            <p><b style={styles.itemField}>Dns Address</b>{this.state.dns}</p>\n                        </div>\n                    ) : (\n                        <div>\n                            <p>\n                                <b style={styles.itemField}>Listen IP</b>\n                                <Input\n                                    style={{width: 200}}\n                                    value={this.state.listen_ip}\n                                    onChange={v => this.setState({listen_ip: v.target.value})}\n                                />\n                            </p>\n\n                            <p>\n                                <b style={styles.itemField}>Listen Port</b>\n                                <Input\n                                    style={{width: 200}}\n                                    value={this.state.listen_port}\n                                      onChange={v => this.setState({listen_port: v.target.value * 1.0})}\n                                />\n                            </p>\n\n                            <p>\n                                <b style={styles.itemField}>Server Subnet</b>\n                                <Input\n                                    style={{width: 400}}\n                                    value={this.state.server}\n                                    placeholder={'10.88.0.0/24'}\n                                    onChange={v => this.setState({server: v.target.value})}\n                                />\n                            </p>\n\n                            <p>\n                                <b style={styles.itemField}>Dns Address</b>\n                                <Input\n                                    style={{width: 400}}\n                                    value={this.state.dns}\n                                    placeholder={'8.8.8.8'}\n                                    onChange={v => this.setState({dns: v.target.value})}\n                                />\n                            </p>\n                        </div>\n                    )\n                }\n            </Spin>\n            <Modal\n                destroyOnClose={true}\n                title={\"generate certification\"}\n                visible={this.state.visible}\n                onOk={() => this.formRef.current.submit()}\n                onCancel={() => this.setState({visible: false, modal_spin: false})}\n            >\n                <Spin spinning={this.state.modal_spin}>\n                <Form\n                    ref={this.formRef}\n                    onFinish={this.onFinish}\n                    layout={'vertical'}\n                >\n                    <Form.Item\n                        name={'country'}\n                        label={'Country'}\n                        rules={[\n                            {\n                                required: true,\n                                max: 2,\n                                message: 'please input country'\n                            }\n                        ]}\n                    >\n                        <Input placeholder={'CN'} max={2}/>\n                    </Form.Item>\n\n                    <Form.Item\n                        name={'province'}\n                        label={'Province'}\n                        rules={[\n                            {\n                                required: true,\n                                max: 4,\n                                message: 'please input province'\n                            }\n                        ]}\n                    >\n                        <Input placeholder={'HN'} max={4}/>\n                    </Form.Item>\n\n                    <Form.Item\n                        name={'city'}\n                        label={'City'}\n                        rules={[\n                            {\n                                required: true,\n                                max: 10,\n                                message: 'please input city name'\n                            }\n                        ]}\n                    >\n                        <Input placeholder={'YiYang'} max={10}/>\n                    </Form.Item>\n\n                    <Form.Item\n                        name={'org'}\n                        label={'Organization'}\n                        rules={[\n                            {\n                                required: true,\n                                max: 20,\n                                message: 'please input Organization name'\n                            }\n                        ]}\n                    >\n                        <Input placeholder={'FuRong Cloud'} max={20}/>\n                    </Form.Item>\n\n                    <Form.Item\n                        name={'org_unit'}\n                        label={'Organization Unit'}\n                        rules={[\n                            {\n                                required: true,\n                                max: 20,\n                                message: 'please input Organization unit'\n                            }\n                        ]}\n                    >\n                        <Input placeholder={'It'} max={20}/>\n                    </Form.Item>\n                    <Form.Item\n                        name={'email'}\n                        label={'E-mail'}\n                        rules={[\n                            {\n                                type: 'email',\n                                required: true,\n                                max: 50,\n                                message: 'please input email'\n                            }\n                        ]}\n                    >\n                        <Input placeholder={'a@b.com'} max={50}/>\n                    </Form.Item>\n                    <Alert type={'warning'} message={'Generate Certification will delete all exists user!!!'}/>\n                </Form>\n                </Spin>\n            </Modal>\n        </Card>\n    }\n}\n\n\nexport class OpenVpnUsers extends Component {\n    constructor(props) {\n        super(props);\n        this.formRef = React.createRef()\n        this.userInfoFormRef = React.createRef()\n        this.state = {\n            dataSource: [],\n            pageInfo: {\n                current: 1,\n                pageSize: 10,\n                total: 0\n            },\n            visible: false,\n            loading: false,\n\n            change_user_info_box: false,\n            user_ip: null,\n            user_route: null,\n            user_id: 0,\n        }\n    }\n\n    openvpn_users_columns = [\n        {title: \"Username\", dataIndex: \"username\"},\n        {title: \"Name\", dataIndex: \"name\"},\n        {title: \"User Ip\", dataIndex: \"user_ip\"},\n        {title: \"Create Time\", dataIndex: \"join_date\"},\n        // {\n        //     title: \"State\",\n        //     dataIndex: \"state\",\n        //     render: (v => <Badge status={v ? 'success' : 'error'} text={v ? 'active' : 'inactive'}/>)\n        // },\n        {\n            title: \"Operate\", dataIndex: \"id\", render: (v, record) => {\n                return (\n                    <Space>\n                        <Button icon={<DownloadOutlined/>}\n                                onClick={() => window.open(globalConfig.domain + '/api/apps/openvpn/ovpnDownload/' + v + '/')}>ovpn</Button>\n                        <Button icon={<DeleteOutlined/>} onClick={() => this.delete_user(v)}>delete</Button>\n                        <Button icon={<ControlOutlined/>} onClick={\n                            ()=>this.setState({\n                                user_ip: record.user_ip,\n                                user_route: record.user_route,\n                                change_user_info_box: true,\n                                user_id: record.id,\n                            })\n                        }>Modify</Button>\n                    </Space>\n                )\n            }\n        }\n    ]\n\n    modify_user_info=(values)=>{\n        values.uid=this.state.user_id;\n        axios.put(\n            globalConfig.domain+'/api/apps/openvpn/openVpnUserSet',values\n        ).then(\n            r=>{\n                message.success('success');\n                this.get_openvpn_users_list(this.state.pageInfo.current);\n                this.setState({change_user_info_box: false})\n            }\n        ).catch(\n            e=>message.error(e.response.data.detail)\n        )\n    }\n\n    get_openvpn_users_list = (page = 1) => {\n        axios.get(\n            globalConfig.domain + '/api/apps/openvpn/openVpnUserSet', {\n                params: {\n                    page: page\n                }\n            }\n        ).then(\n            r => {\n                this.setState({dataSource: r.data.data});\n            }\n        ).catch(e => message.error(e.response.data.detail))\n    }\n\n    delete_user = (uid) => {\n        this.setState({loading: true});\n        Modal.confirm({\n            title: 'warnning',\n            content: 'Are you sure you want to delete this user',\n            onCancel: ()=>this.setState({loading: false}),\n            onOk: () => {\n                axios.delete(\n                    globalConfig.domain + '/api/apps/openvpn/openVpnUserSet', {\n                        params: {\n                            uid: uid\n                        }\n                    }\n                ).then(\n                    r => {\n                        message.success(r.data.msg);\n                        this.setState({loading: false});\n                        this.get_openvpn_users_list(this.state.pageInfo.current);\n                    }\n                )\n            }\n        })\n\n    }\n\n    onFinish = (values) => {\n        this.setState({loading: true});\n        axios.post(\n            globalConfig.domain + '/api/apps/openvpn/openVpnUserSet',\n            values\n        ).then(\n            r => {\n                message.success(r.data.msg);\n                this.setState({visible: false, loading: false})\n                this.get_openvpn_users_list(this.state.pageInfo.current);\n            }\n        ).catch(e => message.error(e.response.data.detail))\n    }\n\n    componentDidMount() {\n        this.get_openvpn_users_list();\n    }\n\n    render() {\n        return <React.Fragment>\n            <Card title={\"OpenVPN Users\"}>\n                <Button type={'primary'} style={{marginBottom: 15}} icon={<PlusOutlined/>}\n                        onClick={() => this.setState({visible: true})}>Add Openvpn User</Button>\n                <Spin spinning={this.state.loading}>\n                    <Table\n                        columns={this.openvpn_users_columns}\n                        dataSource={this.state.dataSource}\n                        rowKey={'id'}\n                        pagination={\n                            {\n                                current: this.state.pageInfo.current,\n                                total: this.state.pageInfo.total,\n                                pageSize: this.state.pageInfo.pageSize,\n                                onChange: (page, pageSize) => this.get_openvpn_users_list(page)\n                            }\n                        }\n                        expandable={\n                            {\n                                expandedRowRender: record => <div\n                                    style={{margin: 0}}\n                                    dangerouslySetInnerHTML={\n                                        {__html: '<b>Client pushed routes</b></br>' + record.user_route.replaceAll(/\\n/g, '</br>')}\n                                    }/>,\n                                // rowExpandable: record => record.name !== 'Not Expandable',\n                            }\n                        }\n                    />\n                </Spin>\n\n            </Card>\n\n            <Modal\n                destroyOnClose={true}\n                title={\"add openvpn user\"}\n                visible={this.state.visible}\n                onOk={() => this.formRef.current.submit()}\n                onCancel={() => this.setState({visible: false})}\n            >\n                <Form\n                    ref={this.formRef}\n                    onFinish={this.onFinish}\n                    layout={'vertical'}\n                >\n                    <Form.Item\n                        name={'name'}\n                        label={'Name'}\n                        rules={[\n                            {\n                                required: true,\n                                max: 6,\n                                message: 'please input a name'\n                            }\n                        ]}\n                    >\n                        <Input placeholder={'Alice'} max={6}/>\n                    </Form.Item>\n\n                    <Form.Item\n                        name={'username'}\n                        label={'Username'}\n                        rules={[\n                            {\n                                required: true,\n                                max: 20,\n                                message: 'please input a username'\n                            }\n                        ]}\n                    >\n                        <Input placeholder={'username'} max={20}/>\n                    </Form.Item>\n\n                    <Form.Item\n                        name={'user_ip'}\n                        label={'User Static Ip Address'}\n                        rules={[\n                            {\n                                required: true,\n                                max: 20,\n                                message: 'please input a private ip address'\n                            }\n                        ]}\n                    >\n                        <Input placeholder={'10.0.88.1'} max={15}/>\n                    </Form.Item>\n\n                    <Form.Item\n                        name={'user_route'}\n                        label={'Push routes '}\n                        rules={[\n                            {\n                                required: true,\n                                max: 500,\n                                message: 'please input route record'\n                            }\n                        ]}\n                    >\n                        <Input.TextArea placeholder={'192.168.100.0 255.255.255.0'}/>\n                    </Form.Item>\n                </Form>\n            </Modal>\n\n            <Modal\n                destroyOnClose={true}\n                title={\"Modify user ip route\"}\n                visible={this.state.change_user_info_box}\n                onOk={() => this.userInfoFormRef.current.submit()}\n                onCancel={() => this.setState({change_user_info_box: false})}\n            >\n                <Form\n                    ref={this.userInfoFormRef}\n                    onFinish={this.modify_user_info}\n                    layout={'vertical'}\n                    initialValues={\n                        {\n                            user_ip: this.state.user_ip,\n                            user_route: this.state.user_route,\n                        }\n                    }\n                >\n                    <Form.Item\n                        name={'user_ip'}\n                        label={'User Static Ip Address'}\n                        rules={[\n                            {\n                                required: true,\n                                max: 20,\n                                message: 'please input a private ip address'\n                            }\n                        ]}\n                    >\n                        <Input placeholder={'10.0.88.1'} max={15}/>\n                    </Form.Item>\n\n                    <Form.Item\n                        name={'user_route'}\n                        label={'Push routes '}\n                        rules={[\n                            {\n                                required: true,\n                                max: 500,\n                                message: 'please input route record'\n                            }\n                        ]}\n                    >\n                        <Input.TextArea placeholder={'192.168.100.0 255.255.255.0'}/>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </React.Fragment>\n    }\n}\n","import React, {Component} from \"react\";\nimport {Breadcrumb, Layout, Menu} from \"antd\";\n\nimport {ReactComponent as OpenVpnOutlined} from '../openvpn.svg'\nimport {OpenVpnStatus, OpenVpnUsers} from \"./component/openvpn\";\n\nconst {Sider, Content} = Layout\nconst {SubMenu} = Menu\n\nexport class Application extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            content: <OpenVpnStatus/>\n        }\n    }\n\n    handleMenuClick = (e) => {\n        // console.log(e.key)\n        // eslint-disable-next-line default-case\n        switch (e.key) {\n            case 'openvpn_status':\n                this.setState({content: <OpenVpnStatus/>})\n                break;\n            case 'openvpn_users':\n                this.setState({content: <OpenVpnUsers/>})\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Breadcrumb style={{margin: '16px 0'}}>\n                    <Breadcrumb.Item>Home</Breadcrumb.Item>\n                    <Breadcrumb.Item>App</Breadcrumb.Item>\n                </Breadcrumb>\n                <Layout className=\"site-layout-background\" style={{padding: '24px 0'}}>\n                    <Sider className=\"site-layout-background\" width={200}>\n                        <Menu\n                            mode=\"inline\"\n                            defaultSelectedKeys={['openvpn_status']}\n                            defaultOpenKeys={['openvpn']}\n                            style={{height: '100%'}}\n                            onClick={this.handleMenuClick}\n                        >\n\n                            <SubMenu key=\"openvpn\" icon={<OpenVpnOutlined width={18} fill={'#666'} />} title=\"OpenVPN\">\n                                <Menu.Item key=\"openvpn_status\">Status</Menu.Item>\n                                <Menu.Item key=\"openvpn_users\">User</Menu.Item>\n                            </SubMenu>\n\n                            {/*<SubMenu key=\"policy\" icon={<SwapOutlined />} title=\"Policy\">*/}\n                            {/*    <Menu.Item key=\"snat\">Nat</Menu.Item>*/}\n                            {/*    <Menu.Item key=\"dnat\">Port map</Menu.Item>*/}\n                            {/*    <Menu.Item key=\"filter\">Forward</Menu.Item>*/}\n                            {/*</SubMenu>*/}\n                        </Menu>\n                    </Sider>\n                    <Content style={{padding: '0 8px', minHeight: 280}}>{this.state.content}</Content>\n                </Layout>\n            </React.Fragment>\n        )\n    }\n}\n","import React, {Component} from \"react\";\nimport {Layout, Menu, Row, Col, Button, Dropdown, message, Modal} from 'antd';\nimport 'antd/dist/antd.css';\nimport '../theme.less';\nimport {ReactComponent as Logo} from '../logo.svg'\nimport { LogoutOutlined, DownOutlined, SaveOutlined, KeyOutlined } from '@ant-design/icons';\nimport {Dashboard} from \"./dashboard\";\nimport {Config} from \"./config\";\nimport {Report} from \"./report\";\nimport {globalConfig, logout} from \"../common\";\nimport axios from \"axios\";\nimport {ChangePassword} from \"./component/changePwd\";\nimport {Application} from \"./app\";\n\nconst { Header, Content, Footer } = Layout;\n\n\nfunction saveConfig(){\n    axios.get(\n        globalConfig.domain+'/api/config/sys/saveRunningConfig'\n    ).then(\n        ()=>message.success('success')\n\n    ).catch(\n        ()=>message.error('save cofnig failed!')\n    )\n}\n\nexport class Home extends Component{\n    constructor(props) {\n        super(props);\n        this.Child = React.createRef();\n        this.state = {\n            content: <Dashboard />,\n            visible: false,\n            modal_title: null,\n            modal_content: null\n        }\n    }\n\n    menu = (\n        <Menu>\n            <Menu.Item key={'chang_password'}>\n                <Button\n                    style={{color:'black'}}\n                    type={'link'}\n                    icon={<KeyOutlined />}\n                    onClick={\n                        ()=>this.setState(\n                            {\n                                visible: true,\n                                modal_title: 'Change Password',\n                                modal_content: <ChangePassword ref={this.Child} onFinish={this.handleChangePasswordFinish} />\n                            }\n                        )\n                    }\n                >Change Password</Button>\n            </Menu.Item>\n\n            <Menu.Item key={'save'}>\n                <Button style={{color:'black'}} type={'link'} icon={<SaveOutlined />} onClick={()=>saveConfig()}>Save Configuration</Button>\n            </Menu.Item>\n\n            <Menu.Item key={'logout'}>\n                <Button style={{color:'black'}} type={'link'} icon={<LogoutOutlined/>} onClick={()=>logout()}>Logout</Button>\n            </Menu.Item>\n\n            {/*<Menu.Item danger>a danger item</Menu.Item>*/}\n        </Menu>\n    );\n\n    handleChangePasswordFinish = (values)=>{\n        console.log(values)\n    }\n\n    pageChange = (e)=>{\n        // eslint-disable-next-line default-case\n        switch (e.key){\n            case 'dashboard':\n                this.setState({content: <Dashboard />});\n                break;\n            case 'config':\n                this.setState({content: <Config />});\n                break;\n            case 'report':\n                this.setState({content: <Report />});\n                break;\n            case 'app':\n                this.setState({content: <Application />});\n                break;\n        }\n    }\n\n    render(){\n        return (\n            <Layout>\n                <Header className=\"header\">\n                    <Row>\n                        <Col span={20}>\n                            <Logo stroke=\"white\" height={40} width={40} style={{marginTop:14, marginRight:20, float:'left'}} />\n                            <div\n                                style={\n                                    {\n                                        float: \"left\",\n                                        width:0,\n                                        height:40,\n                                        overflow: \"hidden\",\n                                        margin: '13px 0',\n                                        borderRight: '0.5px solid #666',\n                                        borderLeft: '0.5px solid #000',\n                                    }\n                                }\n                            > </div>\n                            <div\n                                style={\n                                    {\n                                        color:\"white\",\n                                        float:\"left\",\n                                        margin:'0 20px',\n                                        // marginLeft: -10,\n                                        fontSize: 16,\n                                        fontWeight:\"bolder\"\n                                    }\n                                }\n                            >FuRong Cloud FW</div>\n                            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['dashboard']} onClick={this.pageChange}>\n                                <Menu.Item key=\"dashboard\">Dashboard</Menu.Item>\n                                <Menu.Item key=\"config\">Config</Menu.Item>\n                                <Menu.Item key=\"app\">Apps</Menu.Item>\n                                <Menu.Item key=\"report\">Report</Menu.Item>\n                            </Menu>\n                        </Col>\n\n                        <Col span={4}>\n                            <Dropdown overlay={this.menu} trigger={['click']}>\n                                {/* eslint-disable-next-line */}\n                                <a\n                                    href={'#'}\n                                    style={{\n                                        float:'right',\n                                        color: '#fff'\n                                    }}\n                                    className=\"ant-dropdown-link\"\n                                    onClick={e => e.preventDefault()}\n                                >\n                                    {globalConfig.userData.first_name} <DownOutlined />\n                                </a>\n                            </Dropdown>\n                        </Col>\n                    </Row>\n\n                </Header>\n                <Content style={{padding:\"0 50px\",minHeight: document.documentElement.clientHeight - (64+70)}}>\n                    {this.state.content}\n                    <Modal\n                        destroyOnClose={true}\n                        tile={'Change Password'}\n                        visible={this.state.visible}\n                        onCancel={\n                            ()=>this.setState({visible: false, modal_title: null, modal_content: null})\n                        }\n                        onOk={()=>this.Child.current.submit()}\n                        title={this.state.modal_title}\n                    >\n                        {this.state.modal_content}\n                    </Modal>\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>FuRong Cloud Data Center Design ©2021 Created by Ant UED</Footer>\n            </Layout>\n        )\n    }\n}\n","import React, {Component} from \"react\";\nimport {Button, Form, Input, Row, Col, message} from \"antd\";\nimport {UserOutlined, LockOutlined, VerifiedOutlined} from '@ant-design/icons';\nimport bg from '../assets/bg.jpg'\nimport ad from '../assets/ad.png'\nimport {globalConfig} from \"../common\";\nimport axios from \"axios\";\n\nconst styles = {\n    bg: {\n        position: 'absolute',\n        width: '100%',\n        height: '100%',\n        padding: 0,\n        margin: 0,\n        top: 0,\n        bottom: 0,\n        background: '#00032c url(' + bg + ') no-repeat center center',\n        backgroundSize: '100% 100%'\n    },\n    box: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        height: 495,\n        width: 800,\n        margin: 'auto',\n        // backgroundColor: '#fff'\n        overflow: 'hidden',\n    },\n    left: {\n        float: 'left',\n        width: 350,\n        height: '100%',\n        backgroundColor: '#fff',\n        // backgroundColor: '#28417f',\n        padding: '100px 20px',\n        // opacity: 0.9,\n    },\n    right: {\n        float: 'left',\n        width: 450,\n        height: '100%',\n        background: '#ffffff url(' + ad + ') no-repeat center center',\n        backgroundSize: 'cover'\n        // padding:20\n    },\n    title: {\n        fontWeight: 'bolder',\n        color: '#00032c',\n        textAlign: 'center',\n        fontSize: 20,\n        margin: '20px 0'\n    }\n}\n\n\nexport class Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.basic_url = globalConfig.domain + '/api/common/img_verification_code'\n        this.state = {\n            verification_img_url: this.basic_url\n        }\n    }\n\n    onFinish = (v) => {\n        axios.post(\n            globalConfig.domain + '/api/user/login', v\n        ).then(\n            r => {\n                // console.log(r)\n                message.success('login success');\n                window.sessionStorage.setItem('user_info', JSON.stringify(r.data.data))\n                window.location.reload();\n            }\n        ).catch(\n            e => {\n                message.error(e.response.data.detail);\n                // window.location.reload();\n                let dateTime = Date.now();\n                let timestamp = Math.floor(dateTime / 1000);\n                this.setState({\n                    verification_img_url: this.basic_url + '?ts=' + timestamp\n                })\n            }\n        )\n    }\n\n    render() {\n        return (\n            <div style={styles.bg}>\n                <div style={styles.box}>\n                    <div style={styles.left}>\n                        <p style={styles.title}>User Login</p>\n                        <Form\n                            layout={'vertical'}\n                            onFinish={this.onFinish}\n                        >\n                            <Form.Item\n                                // label=\"Username\"\n                                name=\"username\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'please input username',\n                                        max: 20,\n                                    }\n                                ]}\n                            >\n                                <Input prefix={<UserOutlined/>} placeholder={'Username'}/>\n                            </Form.Item>\n\n                            <Form.Item\n                                name='password'\n                                // label='Password'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'please input username',\n                                        max: 30,\n                                    }\n                                ]}\n                            >\n                                <Input prefix={<LockOutlined/>} type={'password'} placeholder={'Password'}/>\n                            </Form.Item>\n\n                            <Form.Item\n                                // label={'verification code'}\n                                name={'verify_code'}\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'please input verification code',\n                                        max: 5,\n                                    }\n                                ]}\n                            >\n                                <Row gutter={8}>\n                                    <Col span={15}>\n                                        <Input style={{marginTop: 2}} prefix={<VerifiedOutlined/>}\n                                               placeholder={'Verification'}/>\n                                    </Col>\n                                    <Col>\n                                        <img\n                                            alt={'verification code'} width={110}\n                                            src={this.state.verification_img_url}\n                                            onClick={e => {\n                                                let dateTime = Date.now();\n                                                let timestamp = Math.floor(dateTime / 1000);\n                                                e.target.src = this.basic_url + '?ts=' + timestamp\n                                            }}\n                                        />\n                                    </Col>\n                                </Row>\n\n                            </Form.Item>\n\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Login\n                            </Button>\n                        </Form>\n                    </div>\n\n                    <div style={styles.right}>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","export default __webpack_public_path__ + \"static/media/bg.20139654.jpg\";","export default __webpack_public_path__ + \"static/media/ad.2d77ba1d.png\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Home} from \"./pages/home\";\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport {globalConfig} from \"./common\";\nimport {Login} from \"./pages/login\";\n\nReactDOM.render(\n  globalConfig.userData ? <Home /> : <Login/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}